/*
Portcast API (1.1.0) - Bill of Lading Tracking

**This documentation is for the latest version of the Portcast Bill of Lading Tracking API.**  There are two variables used in this documentation: 1. `api-url`: the url to use for accessing the API. The official url is `https://api.portcast.io` 2. `x-api-key`: the access token to send along with every request to the API. This key will be provided to each organisation upon API access activation  The general workflow is as below:  1. Create the bill of lading bookmark if it does not exist already (`POST {{api-url}}/api/v1/eta/bill-of-lading-bookmarks`). 2. A bookmark must contain `carrier_no`, `bl_no` and `cntr_no` information. This will return the bill of lading bookmark information created. Record the `id` field from the response. 3. Wait for predictions to be generated. This could take up to 5 mins. 5. Query for the tracking results based on the `id` recorded earlier (`GET {{api-url}}/api/v1/eta/tracking/bill-of-lading-bookmarks/<id>`) 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package portcast

import (
	"encoding/json"
)

// InlineResponse404 struct for InlineResponse404
type InlineResponse404 struct {
	MessageModel *string `json:"messageModel,omitempty"`
}

// NewInlineResponse404 instantiates a new InlineResponse404 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse404() *InlineResponse404 {
	this := InlineResponse404{}
	return &this
}

// NewInlineResponse404WithDefaults instantiates a new InlineResponse404 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse404WithDefaults() *InlineResponse404 {
	this := InlineResponse404{}
	return &this
}

// GetMessageModel returns the MessageModel field value if set, zero value otherwise.
func (o *InlineResponse404) GetMessageModel() string {
	if o == nil || o.MessageModel == nil {
		var ret string
		return ret
	}
	return *o.MessageModel
}

// GetMessageModelOk returns a tuple with the MessageModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse404) GetMessageModelOk() (*string, bool) {
	if o == nil || o.MessageModel == nil {
		return nil, false
	}
	return o.MessageModel, true
}

// HasMessageModel returns a boolean if a field has been set.
func (o *InlineResponse404) HasMessageModel() bool {
	if o != nil && o.MessageModel != nil {
		return true
	}

	return false
}

// SetMessageModel gets a reference to the given string and assigns it to the MessageModel field.
func (o *InlineResponse404) SetMessageModel(v string) {
	o.MessageModel = &v
}

func (o InlineResponse404) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MessageModel != nil {
		toSerialize["messageModel"] = o.MessageModel
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse404 struct {
	value *InlineResponse404
	isSet bool
}

func (v NullableInlineResponse404) Get() *InlineResponse404 {
	return v.value
}

func (v *NullableInlineResponse404) Set(val *InlineResponse404) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse404) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse404) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse404(val *InlineResponse404) *NullableInlineResponse404 {
	return &NullableInlineResponse404{value: val, isSet: true}
}

func (v NullableInlineResponse404) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse404) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


