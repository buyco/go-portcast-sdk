/*
Container Tracking API

This documentation defines how the users can utilize the Portcast API to retrieve the latest Track and Trace Data for any container, bill of lading or booking across 100+ carriers and 2500+ ports across the globe.  What's changed in the version 2.0? Find out more about it [here](https://support.portcast.io/support/solutions/articles/151000074289-api-release-notes-april-2023-)!!

API version: 2.0
Contact: support@portcast.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package portcast

import (
	"encoding/json"
	"fmt"
)

// BookingAPIResponseInner struct for BookingAPIResponseInner
type BookingAPIResponseInner struct {
	BookingAPIResponseInnerAnyOf  *BookingAPIResponseInnerAnyOf
	BookingAPIResponseInnerAnyOf1 *BookingAPIResponseInnerAnyOf1
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *BookingAPIResponseInner) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into BookingAPIResponseInnerAnyOf
	err = json.Unmarshal(data, &dst.BookingAPIResponseInnerAnyOf)
	if err == nil {
		jsonBookingAPIResponseInnerAnyOf, _ := json.Marshal(dst.BookingAPIResponseInnerAnyOf)
		if string(jsonBookingAPIResponseInnerAnyOf) == "{}" { // empty struct
			dst.BookingAPIResponseInnerAnyOf = nil
		} else {
			return nil // data stored in dst.BookingAPIResponseInnerAnyOf, return on the first match
		}
	} else {
		dst.BookingAPIResponseInnerAnyOf = nil
	}

	// try to unmarshal JSON data into BookingAPIResponseInnerAnyOf1
	err = json.Unmarshal(data, &dst.BookingAPIResponseInnerAnyOf1)
	if err == nil {
		jsonBookingAPIResponseInnerAnyOf1, _ := json.Marshal(dst.BookingAPIResponseInnerAnyOf1)
		if string(jsonBookingAPIResponseInnerAnyOf1) == "{}" { // empty struct
			dst.BookingAPIResponseInnerAnyOf1 = nil
		} else {
			return nil // data stored in dst.BookingAPIResponseInnerAnyOf1, return on the first match
		}
	} else {
		dst.BookingAPIResponseInnerAnyOf1 = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(BookingAPIResponseInner)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *BookingAPIResponseInner) MarshalJSON() ([]byte, error) {
	if src.BookingAPIResponseInnerAnyOf != nil {
		return json.Marshal(&src.BookingAPIResponseInnerAnyOf)
	}

	if src.BookingAPIResponseInnerAnyOf1 != nil {
		return json.Marshal(&src.BookingAPIResponseInnerAnyOf1)
	}

	return nil, nil // no data in anyOf schemas
}

type NullableBookingAPIResponseInner struct {
	value *BookingAPIResponseInner
	isSet bool
}

func (v NullableBookingAPIResponseInner) Get() *BookingAPIResponseInner {
	return v.value
}

func (v *NullableBookingAPIResponseInner) Set(val *BookingAPIResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableBookingAPIResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableBookingAPIResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBookingAPIResponseInner(val *BookingAPIResponseInner) *NullableBookingAPIResponseInner {
	return &NullableBookingAPIResponseInner{value: val, isSet: true}
}

func (v NullableBookingAPIResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBookingAPIResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
