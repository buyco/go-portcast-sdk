/*
Container Tracking API

This documentation defines how the users can utilize the Portcast API to retrieve the latest Track and Trace Data for any container, bill of lading or booking across 100+ carriers and 2500+ ports across the globe.  What's changed in the version 2.0? Find out more about it [here](https://support.portcast.io/support/solutions/articles/151000074289-api-release-notes-april-2023-)!!

API version: 2.0
Contact: support@portcast.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package portcast

import (
	"encoding/json"
	"fmt"
)

// PortcastAPIBillOfLading Summary of the shipment's Predicted, Scheduled and Actual Events that happen at the POL and POD
type PortcastAPIBillOfLading struct {
	BillOfLading *BillOfLading
	Metadata     *map[string]interface{}
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *PortcastAPIBillOfLading) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into BillOfLading
	err = json.Unmarshal(data, &dst.BillOfLading)
	if err == nil {
		jsonBillOfLading, _ := json.Marshal(dst.BillOfLading)
		if string(jsonBillOfLading) == "{}" { // empty struct
			dst.BillOfLading = nil
		} else {
			return nil // data stored in dst.BillOfLading, return on the first match
		}
	} else {
		dst.BillOfLading = nil
	}

	// try to unmarshal JSON data into map[string]interface{}
	err = json.Unmarshal(data, &dst.Metadata)
	if err == nil {
		jsonMetadata, _ := json.Marshal(dst.Metadata)
		if string(jsonMetadata) == "{}" { // empty struct
			dst.Metadata = nil
		} else {
			return nil // data stored in dst.Metadata, return on the first match
		}
	} else {
		dst.Metadata = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(PortcastAPIBillOfLading)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *PortcastAPIBillOfLading) MarshalJSON() ([]byte, error) {
	if src.BillOfLading != nil {
		return json.Marshal(&src.BillOfLading)
	}

	if src.Metadata != nil {
		return json.Marshal(&src.Metadata)
	}

	return nil, nil // no data in anyOf schemas
}

type NullablePortcastAPIBillOfLading struct {
	value *PortcastAPIBillOfLading
	isSet bool
}

func (v NullablePortcastAPIBillOfLading) Get() *PortcastAPIBillOfLading {
	return v.value
}

func (v *NullablePortcastAPIBillOfLading) Set(val *PortcastAPIBillOfLading) {
	v.value = val
	v.isSet = true
}

func (v NullablePortcastAPIBillOfLading) IsSet() bool {
	return v.isSet
}

func (v *NullablePortcastAPIBillOfLading) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortcastAPIBillOfLading(val *PortcastAPIBillOfLading) *NullablePortcastAPIBillOfLading {
	return &NullablePortcastAPIBillOfLading{value: val, isSet: true}
}

func (v NullablePortcastAPIBillOfLading) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortcastAPIBillOfLading) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
