/*
Container Tracking API

This documentation defines how the users can utilize the Portcast API to retrieve the latest Track and Trace Data for any container, bill of lading or booking across 100+ carriers and 2500+ ports across the globe.  What's changed in the version 2.0? Find out more about it [here](https://support.portcast.io/support/solutions/articles/151000074289-api-release-notes-april-2023-)!!

API version: 2.0
Contact: support@portcast.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package portcast

import (
	"encoding/json"
	"time"
)

// checks if the VoyageDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VoyageDetails{}

// VoyageDetails Schema for Voyage Details
type VoyageDetails struct {
	// Vessel Schedule Provider SCAC
	ActiveScac NullableString `json:"active_scac,omitempty"`
	// Actual Time of Arrival - Local Time
	ActualArrivalLt NullableTime `json:"actual_arrival_lt,omitempty"`
	// Actual Time of Arrival - UTC Adjusted Time
	ActualArrivalUtc NullableTime `json:"actual_arrival_utc,omitempty"`
	// Actual Time of Departure - Local Time
	ActualDepartureLt NullableTime `json:"actual_departure_lt,omitempty"`
	// Actual Time of Departure - UTC Adjusted Time
	ActualDepartureUtc NullableTime `json:"actual_departure_utc,omitempty"`
	DelayReasons []string `json:"delay_reasons,omitempty"`
	// Unique Identifier for the Voyage Detail
	Id *string `json:"id,omitempty"`
	// Index of the Journey Position
	Index *int32 `json:"index,omitempty"`
	// Latitude of the Port Location
	Lat *float32 `json:"lat,omitempty"`
	// Longitude of the Port Location
	Lon *float32 `json:"lon,omitempty"`
	// Port Location UNLOCODE
	PortCode *string `json:"port_code,omitempty"`
	// Port Location Name
	PortName *string `json:"port_name,omitempty"`
	// Portcast Predicted Arrival Time - Local Time
	PredictedArrivalLt NullableTime `json:"predicted_arrival_lt,omitempty"`
	// Portcast Predicted Arrival Time - UTC Adjusted
	PredictedArrivalUtc NullableTime `json:"predicted_arrival_utc,omitempty"`
	// Portcast Predicted Departure Time - Local Time
	PredictedDepartureLt NullableTime `json:"predicted_departure_lt,omitempty"`
	// Portcast Predicted Departure Time - UTC Adjusted Time
	PredictedDepartureUtc NullableTime `json:"predicted_departure_utc,omitempty"`
	// Prediction Generation Timestamp
	PredictionTimeUtc NullableTime `json:"prediction_time_utc,omitempty"`
	// Vessel Scheduled Arrival Time - Local Time
	ScheduledArrivalLt NullableTime `json:"scheduled_arrival_lt,omitempty"`
	// Vessel Scheduled Arrival Time - UTC Adjusted Time
	ScheduledArrivalUtc NullableTime `json:"scheduled_arrival_utc,omitempty"`
	// Vessel Scheduled Departure Time - Local Time
	ScheduledDepartureLt NullableTime `json:"scheduled_departure_lt,omitempty"`
	// Vessel Scheduled Departure Time - Departure Time
	ScheduledDepartureUtc NullableTime `json:"scheduled_departure_utc,omitempty"`
	// Timezone of the Port Location
	Timezone NullableString `json:"timezone,omitempty"`
	// Voyage Numbers at the Port Location (Comes from schedule for that leg ; first one is import voyage number, second one is export voyage no)
	VoyageNoList []string `json:"voyage_no_list,omitempty"`
}

// NewVoyageDetails instantiates a new VoyageDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVoyageDetails() *VoyageDetails {
	this := VoyageDetails{}
	return &this
}

// NewVoyageDetailsWithDefaults instantiates a new VoyageDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVoyageDetailsWithDefaults() *VoyageDetails {
	this := VoyageDetails{}
	return &this
}

// GetActiveScac returns the ActiveScac field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VoyageDetails) GetActiveScac() string {
	if o == nil || IsNil(o.ActiveScac.Get()) {
		var ret string
		return ret
	}
	return *o.ActiveScac.Get()
}

// GetActiveScacOk returns a tuple with the ActiveScac field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VoyageDetails) GetActiveScacOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActiveScac.Get(), o.ActiveScac.IsSet()
}

// HasActiveScac returns a boolean if a field has been set.
func (o *VoyageDetails) HasActiveScac() bool {
	if o != nil && o.ActiveScac.IsSet() {
		return true
	}

	return false
}

// SetActiveScac gets a reference to the given NullableString and assigns it to the ActiveScac field.
func (o *VoyageDetails) SetActiveScac(v string) {
	o.ActiveScac.Set(&v)
}
// SetActiveScacNil sets the value for ActiveScac to be an explicit nil
func (o *VoyageDetails) SetActiveScacNil() {
	o.ActiveScac.Set(nil)
}

// UnsetActiveScac ensures that no value is present for ActiveScac, not even an explicit nil
func (o *VoyageDetails) UnsetActiveScac() {
	o.ActiveScac.Unset()
}

// GetActualArrivalLt returns the ActualArrivalLt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VoyageDetails) GetActualArrivalLt() time.Time {
	if o == nil || IsNil(o.ActualArrivalLt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ActualArrivalLt.Get()
}

// GetActualArrivalLtOk returns a tuple with the ActualArrivalLt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VoyageDetails) GetActualArrivalLtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActualArrivalLt.Get(), o.ActualArrivalLt.IsSet()
}

// HasActualArrivalLt returns a boolean if a field has been set.
func (o *VoyageDetails) HasActualArrivalLt() bool {
	if o != nil && o.ActualArrivalLt.IsSet() {
		return true
	}

	return false
}

// SetActualArrivalLt gets a reference to the given NullableTime and assigns it to the ActualArrivalLt field.
func (o *VoyageDetails) SetActualArrivalLt(v time.Time) {
	o.ActualArrivalLt.Set(&v)
}
// SetActualArrivalLtNil sets the value for ActualArrivalLt to be an explicit nil
func (o *VoyageDetails) SetActualArrivalLtNil() {
	o.ActualArrivalLt.Set(nil)
}

// UnsetActualArrivalLt ensures that no value is present for ActualArrivalLt, not even an explicit nil
func (o *VoyageDetails) UnsetActualArrivalLt() {
	o.ActualArrivalLt.Unset()
}

// GetActualArrivalUtc returns the ActualArrivalUtc field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VoyageDetails) GetActualArrivalUtc() time.Time {
	if o == nil || IsNil(o.ActualArrivalUtc.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ActualArrivalUtc.Get()
}

// GetActualArrivalUtcOk returns a tuple with the ActualArrivalUtc field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VoyageDetails) GetActualArrivalUtcOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActualArrivalUtc.Get(), o.ActualArrivalUtc.IsSet()
}

// HasActualArrivalUtc returns a boolean if a field has been set.
func (o *VoyageDetails) HasActualArrivalUtc() bool {
	if o != nil && o.ActualArrivalUtc.IsSet() {
		return true
	}

	return false
}

// SetActualArrivalUtc gets a reference to the given NullableTime and assigns it to the ActualArrivalUtc field.
func (o *VoyageDetails) SetActualArrivalUtc(v time.Time) {
	o.ActualArrivalUtc.Set(&v)
}
// SetActualArrivalUtcNil sets the value for ActualArrivalUtc to be an explicit nil
func (o *VoyageDetails) SetActualArrivalUtcNil() {
	o.ActualArrivalUtc.Set(nil)
}

// UnsetActualArrivalUtc ensures that no value is present for ActualArrivalUtc, not even an explicit nil
func (o *VoyageDetails) UnsetActualArrivalUtc() {
	o.ActualArrivalUtc.Unset()
}

// GetActualDepartureLt returns the ActualDepartureLt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VoyageDetails) GetActualDepartureLt() time.Time {
	if o == nil || IsNil(o.ActualDepartureLt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ActualDepartureLt.Get()
}

// GetActualDepartureLtOk returns a tuple with the ActualDepartureLt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VoyageDetails) GetActualDepartureLtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActualDepartureLt.Get(), o.ActualDepartureLt.IsSet()
}

// HasActualDepartureLt returns a boolean if a field has been set.
func (o *VoyageDetails) HasActualDepartureLt() bool {
	if o != nil && o.ActualDepartureLt.IsSet() {
		return true
	}

	return false
}

// SetActualDepartureLt gets a reference to the given NullableTime and assigns it to the ActualDepartureLt field.
func (o *VoyageDetails) SetActualDepartureLt(v time.Time) {
	o.ActualDepartureLt.Set(&v)
}
// SetActualDepartureLtNil sets the value for ActualDepartureLt to be an explicit nil
func (o *VoyageDetails) SetActualDepartureLtNil() {
	o.ActualDepartureLt.Set(nil)
}

// UnsetActualDepartureLt ensures that no value is present for ActualDepartureLt, not even an explicit nil
func (o *VoyageDetails) UnsetActualDepartureLt() {
	o.ActualDepartureLt.Unset()
}

// GetActualDepartureUtc returns the ActualDepartureUtc field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VoyageDetails) GetActualDepartureUtc() time.Time {
	if o == nil || IsNil(o.ActualDepartureUtc.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ActualDepartureUtc.Get()
}

// GetActualDepartureUtcOk returns a tuple with the ActualDepartureUtc field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VoyageDetails) GetActualDepartureUtcOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActualDepartureUtc.Get(), o.ActualDepartureUtc.IsSet()
}

// HasActualDepartureUtc returns a boolean if a field has been set.
func (o *VoyageDetails) HasActualDepartureUtc() bool {
	if o != nil && o.ActualDepartureUtc.IsSet() {
		return true
	}

	return false
}

// SetActualDepartureUtc gets a reference to the given NullableTime and assigns it to the ActualDepartureUtc field.
func (o *VoyageDetails) SetActualDepartureUtc(v time.Time) {
	o.ActualDepartureUtc.Set(&v)
}
// SetActualDepartureUtcNil sets the value for ActualDepartureUtc to be an explicit nil
func (o *VoyageDetails) SetActualDepartureUtcNil() {
	o.ActualDepartureUtc.Set(nil)
}

// UnsetActualDepartureUtc ensures that no value is present for ActualDepartureUtc, not even an explicit nil
func (o *VoyageDetails) UnsetActualDepartureUtc() {
	o.ActualDepartureUtc.Unset()
}

// GetDelayReasons returns the DelayReasons field value if set, zero value otherwise.
func (o *VoyageDetails) GetDelayReasons() []string {
	if o == nil || IsNil(o.DelayReasons) {
		var ret []string
		return ret
	}
	return o.DelayReasons
}

// GetDelayReasonsOk returns a tuple with the DelayReasons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoyageDetails) GetDelayReasonsOk() ([]string, bool) {
	if o == nil || IsNil(o.DelayReasons) {
		return nil, false
	}
	return o.DelayReasons, true
}

// HasDelayReasons returns a boolean if a field has been set.
func (o *VoyageDetails) HasDelayReasons() bool {
	if o != nil && !IsNil(o.DelayReasons) {
		return true
	}

	return false
}

// SetDelayReasons gets a reference to the given []string and assigns it to the DelayReasons field.
func (o *VoyageDetails) SetDelayReasons(v []string) {
	o.DelayReasons = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VoyageDetails) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoyageDetails) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VoyageDetails) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *VoyageDetails) SetId(v string) {
	o.Id = &v
}

// GetIndex returns the Index field value if set, zero value otherwise.
func (o *VoyageDetails) GetIndex() int32 {
	if o == nil || IsNil(o.Index) {
		var ret int32
		return ret
	}
	return *o.Index
}

// GetIndexOk returns a tuple with the Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoyageDetails) GetIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.Index) {
		return nil, false
	}
	return o.Index, true
}

// HasIndex returns a boolean if a field has been set.
func (o *VoyageDetails) HasIndex() bool {
	if o != nil && !IsNil(o.Index) {
		return true
	}

	return false
}

// SetIndex gets a reference to the given int32 and assigns it to the Index field.
func (o *VoyageDetails) SetIndex(v int32) {
	o.Index = &v
}

// GetLat returns the Lat field value if set, zero value otherwise.
func (o *VoyageDetails) GetLat() float32 {
	if o == nil || IsNil(o.Lat) {
		var ret float32
		return ret
	}
	return *o.Lat
}

// GetLatOk returns a tuple with the Lat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoyageDetails) GetLatOk() (*float32, bool) {
	if o == nil || IsNil(o.Lat) {
		return nil, false
	}
	return o.Lat, true
}

// HasLat returns a boolean if a field has been set.
func (o *VoyageDetails) HasLat() bool {
	if o != nil && !IsNil(o.Lat) {
		return true
	}

	return false
}

// SetLat gets a reference to the given float32 and assigns it to the Lat field.
func (o *VoyageDetails) SetLat(v float32) {
	o.Lat = &v
}

// GetLon returns the Lon field value if set, zero value otherwise.
func (o *VoyageDetails) GetLon() float32 {
	if o == nil || IsNil(o.Lon) {
		var ret float32
		return ret
	}
	return *o.Lon
}

// GetLonOk returns a tuple with the Lon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoyageDetails) GetLonOk() (*float32, bool) {
	if o == nil || IsNil(o.Lon) {
		return nil, false
	}
	return o.Lon, true
}

// HasLon returns a boolean if a field has been set.
func (o *VoyageDetails) HasLon() bool {
	if o != nil && !IsNil(o.Lon) {
		return true
	}

	return false
}

// SetLon gets a reference to the given float32 and assigns it to the Lon field.
func (o *VoyageDetails) SetLon(v float32) {
	o.Lon = &v
}

// GetPortCode returns the PortCode field value if set, zero value otherwise.
func (o *VoyageDetails) GetPortCode() string {
	if o == nil || IsNil(o.PortCode) {
		var ret string
		return ret
	}
	return *o.PortCode
}

// GetPortCodeOk returns a tuple with the PortCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoyageDetails) GetPortCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PortCode) {
		return nil, false
	}
	return o.PortCode, true
}

// HasPortCode returns a boolean if a field has been set.
func (o *VoyageDetails) HasPortCode() bool {
	if o != nil && !IsNil(o.PortCode) {
		return true
	}

	return false
}

// SetPortCode gets a reference to the given string and assigns it to the PortCode field.
func (o *VoyageDetails) SetPortCode(v string) {
	o.PortCode = &v
}

// GetPortName returns the PortName field value if set, zero value otherwise.
func (o *VoyageDetails) GetPortName() string {
	if o == nil || IsNil(o.PortName) {
		var ret string
		return ret
	}
	return *o.PortName
}

// GetPortNameOk returns a tuple with the PortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoyageDetails) GetPortNameOk() (*string, bool) {
	if o == nil || IsNil(o.PortName) {
		return nil, false
	}
	return o.PortName, true
}

// HasPortName returns a boolean if a field has been set.
func (o *VoyageDetails) HasPortName() bool {
	if o != nil && !IsNil(o.PortName) {
		return true
	}

	return false
}

// SetPortName gets a reference to the given string and assigns it to the PortName field.
func (o *VoyageDetails) SetPortName(v string) {
	o.PortName = &v
}

// GetPredictedArrivalLt returns the PredictedArrivalLt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VoyageDetails) GetPredictedArrivalLt() time.Time {
	if o == nil || IsNil(o.PredictedArrivalLt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.PredictedArrivalLt.Get()
}

// GetPredictedArrivalLtOk returns a tuple with the PredictedArrivalLt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VoyageDetails) GetPredictedArrivalLtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.PredictedArrivalLt.Get(), o.PredictedArrivalLt.IsSet()
}

// HasPredictedArrivalLt returns a boolean if a field has been set.
func (o *VoyageDetails) HasPredictedArrivalLt() bool {
	if o != nil && o.PredictedArrivalLt.IsSet() {
		return true
	}

	return false
}

// SetPredictedArrivalLt gets a reference to the given NullableTime and assigns it to the PredictedArrivalLt field.
func (o *VoyageDetails) SetPredictedArrivalLt(v time.Time) {
	o.PredictedArrivalLt.Set(&v)
}
// SetPredictedArrivalLtNil sets the value for PredictedArrivalLt to be an explicit nil
func (o *VoyageDetails) SetPredictedArrivalLtNil() {
	o.PredictedArrivalLt.Set(nil)
}

// UnsetPredictedArrivalLt ensures that no value is present for PredictedArrivalLt, not even an explicit nil
func (o *VoyageDetails) UnsetPredictedArrivalLt() {
	o.PredictedArrivalLt.Unset()
}

// GetPredictedArrivalUtc returns the PredictedArrivalUtc field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VoyageDetails) GetPredictedArrivalUtc() time.Time {
	if o == nil || IsNil(o.PredictedArrivalUtc.Get()) {
		var ret time.Time
		return ret
	}
	return *o.PredictedArrivalUtc.Get()
}

// GetPredictedArrivalUtcOk returns a tuple with the PredictedArrivalUtc field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VoyageDetails) GetPredictedArrivalUtcOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.PredictedArrivalUtc.Get(), o.PredictedArrivalUtc.IsSet()
}

// HasPredictedArrivalUtc returns a boolean if a field has been set.
func (o *VoyageDetails) HasPredictedArrivalUtc() bool {
	if o != nil && o.PredictedArrivalUtc.IsSet() {
		return true
	}

	return false
}

// SetPredictedArrivalUtc gets a reference to the given NullableTime and assigns it to the PredictedArrivalUtc field.
func (o *VoyageDetails) SetPredictedArrivalUtc(v time.Time) {
	o.PredictedArrivalUtc.Set(&v)
}
// SetPredictedArrivalUtcNil sets the value for PredictedArrivalUtc to be an explicit nil
func (o *VoyageDetails) SetPredictedArrivalUtcNil() {
	o.PredictedArrivalUtc.Set(nil)
}

// UnsetPredictedArrivalUtc ensures that no value is present for PredictedArrivalUtc, not even an explicit nil
func (o *VoyageDetails) UnsetPredictedArrivalUtc() {
	o.PredictedArrivalUtc.Unset()
}

// GetPredictedDepartureLt returns the PredictedDepartureLt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VoyageDetails) GetPredictedDepartureLt() time.Time {
	if o == nil || IsNil(o.PredictedDepartureLt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.PredictedDepartureLt.Get()
}

// GetPredictedDepartureLtOk returns a tuple with the PredictedDepartureLt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VoyageDetails) GetPredictedDepartureLtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.PredictedDepartureLt.Get(), o.PredictedDepartureLt.IsSet()
}

// HasPredictedDepartureLt returns a boolean if a field has been set.
func (o *VoyageDetails) HasPredictedDepartureLt() bool {
	if o != nil && o.PredictedDepartureLt.IsSet() {
		return true
	}

	return false
}

// SetPredictedDepartureLt gets a reference to the given NullableTime and assigns it to the PredictedDepartureLt field.
func (o *VoyageDetails) SetPredictedDepartureLt(v time.Time) {
	o.PredictedDepartureLt.Set(&v)
}
// SetPredictedDepartureLtNil sets the value for PredictedDepartureLt to be an explicit nil
func (o *VoyageDetails) SetPredictedDepartureLtNil() {
	o.PredictedDepartureLt.Set(nil)
}

// UnsetPredictedDepartureLt ensures that no value is present for PredictedDepartureLt, not even an explicit nil
func (o *VoyageDetails) UnsetPredictedDepartureLt() {
	o.PredictedDepartureLt.Unset()
}

// GetPredictedDepartureUtc returns the PredictedDepartureUtc field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VoyageDetails) GetPredictedDepartureUtc() time.Time {
	if o == nil || IsNil(o.PredictedDepartureUtc.Get()) {
		var ret time.Time
		return ret
	}
	return *o.PredictedDepartureUtc.Get()
}

// GetPredictedDepartureUtcOk returns a tuple with the PredictedDepartureUtc field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VoyageDetails) GetPredictedDepartureUtcOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.PredictedDepartureUtc.Get(), o.PredictedDepartureUtc.IsSet()
}

// HasPredictedDepartureUtc returns a boolean if a field has been set.
func (o *VoyageDetails) HasPredictedDepartureUtc() bool {
	if o != nil && o.PredictedDepartureUtc.IsSet() {
		return true
	}

	return false
}

// SetPredictedDepartureUtc gets a reference to the given NullableTime and assigns it to the PredictedDepartureUtc field.
func (o *VoyageDetails) SetPredictedDepartureUtc(v time.Time) {
	o.PredictedDepartureUtc.Set(&v)
}
// SetPredictedDepartureUtcNil sets the value for PredictedDepartureUtc to be an explicit nil
func (o *VoyageDetails) SetPredictedDepartureUtcNil() {
	o.PredictedDepartureUtc.Set(nil)
}

// UnsetPredictedDepartureUtc ensures that no value is present for PredictedDepartureUtc, not even an explicit nil
func (o *VoyageDetails) UnsetPredictedDepartureUtc() {
	o.PredictedDepartureUtc.Unset()
}

// GetPredictionTimeUtc returns the PredictionTimeUtc field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VoyageDetails) GetPredictionTimeUtc() time.Time {
	if o == nil || IsNil(o.PredictionTimeUtc.Get()) {
		var ret time.Time
		return ret
	}
	return *o.PredictionTimeUtc.Get()
}

// GetPredictionTimeUtcOk returns a tuple with the PredictionTimeUtc field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VoyageDetails) GetPredictionTimeUtcOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.PredictionTimeUtc.Get(), o.PredictionTimeUtc.IsSet()
}

// HasPredictionTimeUtc returns a boolean if a field has been set.
func (o *VoyageDetails) HasPredictionTimeUtc() bool {
	if o != nil && o.PredictionTimeUtc.IsSet() {
		return true
	}

	return false
}

// SetPredictionTimeUtc gets a reference to the given NullableTime and assigns it to the PredictionTimeUtc field.
func (o *VoyageDetails) SetPredictionTimeUtc(v time.Time) {
	o.PredictionTimeUtc.Set(&v)
}
// SetPredictionTimeUtcNil sets the value for PredictionTimeUtc to be an explicit nil
func (o *VoyageDetails) SetPredictionTimeUtcNil() {
	o.PredictionTimeUtc.Set(nil)
}

// UnsetPredictionTimeUtc ensures that no value is present for PredictionTimeUtc, not even an explicit nil
func (o *VoyageDetails) UnsetPredictionTimeUtc() {
	o.PredictionTimeUtc.Unset()
}

// GetScheduledArrivalLt returns the ScheduledArrivalLt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VoyageDetails) GetScheduledArrivalLt() time.Time {
	if o == nil || IsNil(o.ScheduledArrivalLt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ScheduledArrivalLt.Get()
}

// GetScheduledArrivalLtOk returns a tuple with the ScheduledArrivalLt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VoyageDetails) GetScheduledArrivalLtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScheduledArrivalLt.Get(), o.ScheduledArrivalLt.IsSet()
}

// HasScheduledArrivalLt returns a boolean if a field has been set.
func (o *VoyageDetails) HasScheduledArrivalLt() bool {
	if o != nil && o.ScheduledArrivalLt.IsSet() {
		return true
	}

	return false
}

// SetScheduledArrivalLt gets a reference to the given NullableTime and assigns it to the ScheduledArrivalLt field.
func (o *VoyageDetails) SetScheduledArrivalLt(v time.Time) {
	o.ScheduledArrivalLt.Set(&v)
}
// SetScheduledArrivalLtNil sets the value for ScheduledArrivalLt to be an explicit nil
func (o *VoyageDetails) SetScheduledArrivalLtNil() {
	o.ScheduledArrivalLt.Set(nil)
}

// UnsetScheduledArrivalLt ensures that no value is present for ScheduledArrivalLt, not even an explicit nil
func (o *VoyageDetails) UnsetScheduledArrivalLt() {
	o.ScheduledArrivalLt.Unset()
}

// GetScheduledArrivalUtc returns the ScheduledArrivalUtc field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VoyageDetails) GetScheduledArrivalUtc() time.Time {
	if o == nil || IsNil(o.ScheduledArrivalUtc.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ScheduledArrivalUtc.Get()
}

// GetScheduledArrivalUtcOk returns a tuple with the ScheduledArrivalUtc field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VoyageDetails) GetScheduledArrivalUtcOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScheduledArrivalUtc.Get(), o.ScheduledArrivalUtc.IsSet()
}

// HasScheduledArrivalUtc returns a boolean if a field has been set.
func (o *VoyageDetails) HasScheduledArrivalUtc() bool {
	if o != nil && o.ScheduledArrivalUtc.IsSet() {
		return true
	}

	return false
}

// SetScheduledArrivalUtc gets a reference to the given NullableTime and assigns it to the ScheduledArrivalUtc field.
func (o *VoyageDetails) SetScheduledArrivalUtc(v time.Time) {
	o.ScheduledArrivalUtc.Set(&v)
}
// SetScheduledArrivalUtcNil sets the value for ScheduledArrivalUtc to be an explicit nil
func (o *VoyageDetails) SetScheduledArrivalUtcNil() {
	o.ScheduledArrivalUtc.Set(nil)
}

// UnsetScheduledArrivalUtc ensures that no value is present for ScheduledArrivalUtc, not even an explicit nil
func (o *VoyageDetails) UnsetScheduledArrivalUtc() {
	o.ScheduledArrivalUtc.Unset()
}

// GetScheduledDepartureLt returns the ScheduledDepartureLt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VoyageDetails) GetScheduledDepartureLt() time.Time {
	if o == nil || IsNil(o.ScheduledDepartureLt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ScheduledDepartureLt.Get()
}

// GetScheduledDepartureLtOk returns a tuple with the ScheduledDepartureLt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VoyageDetails) GetScheduledDepartureLtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScheduledDepartureLt.Get(), o.ScheduledDepartureLt.IsSet()
}

// HasScheduledDepartureLt returns a boolean if a field has been set.
func (o *VoyageDetails) HasScheduledDepartureLt() bool {
	if o != nil && o.ScheduledDepartureLt.IsSet() {
		return true
	}

	return false
}

// SetScheduledDepartureLt gets a reference to the given NullableTime and assigns it to the ScheduledDepartureLt field.
func (o *VoyageDetails) SetScheduledDepartureLt(v time.Time) {
	o.ScheduledDepartureLt.Set(&v)
}
// SetScheduledDepartureLtNil sets the value for ScheduledDepartureLt to be an explicit nil
func (o *VoyageDetails) SetScheduledDepartureLtNil() {
	o.ScheduledDepartureLt.Set(nil)
}

// UnsetScheduledDepartureLt ensures that no value is present for ScheduledDepartureLt, not even an explicit nil
func (o *VoyageDetails) UnsetScheduledDepartureLt() {
	o.ScheduledDepartureLt.Unset()
}

// GetScheduledDepartureUtc returns the ScheduledDepartureUtc field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VoyageDetails) GetScheduledDepartureUtc() time.Time {
	if o == nil || IsNil(o.ScheduledDepartureUtc.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ScheduledDepartureUtc.Get()
}

// GetScheduledDepartureUtcOk returns a tuple with the ScheduledDepartureUtc field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VoyageDetails) GetScheduledDepartureUtcOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScheduledDepartureUtc.Get(), o.ScheduledDepartureUtc.IsSet()
}

// HasScheduledDepartureUtc returns a boolean if a field has been set.
func (o *VoyageDetails) HasScheduledDepartureUtc() bool {
	if o != nil && o.ScheduledDepartureUtc.IsSet() {
		return true
	}

	return false
}

// SetScheduledDepartureUtc gets a reference to the given NullableTime and assigns it to the ScheduledDepartureUtc field.
func (o *VoyageDetails) SetScheduledDepartureUtc(v time.Time) {
	o.ScheduledDepartureUtc.Set(&v)
}
// SetScheduledDepartureUtcNil sets the value for ScheduledDepartureUtc to be an explicit nil
func (o *VoyageDetails) SetScheduledDepartureUtcNil() {
	o.ScheduledDepartureUtc.Set(nil)
}

// UnsetScheduledDepartureUtc ensures that no value is present for ScheduledDepartureUtc, not even an explicit nil
func (o *VoyageDetails) UnsetScheduledDepartureUtc() {
	o.ScheduledDepartureUtc.Unset()
}

// GetTimezone returns the Timezone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VoyageDetails) GetTimezone() string {
	if o == nil || IsNil(o.Timezone.Get()) {
		var ret string
		return ret
	}
	return *o.Timezone.Get()
}

// GetTimezoneOk returns a tuple with the Timezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VoyageDetails) GetTimezoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Timezone.Get(), o.Timezone.IsSet()
}

// HasTimezone returns a boolean if a field has been set.
func (o *VoyageDetails) HasTimezone() bool {
	if o != nil && o.Timezone.IsSet() {
		return true
	}

	return false
}

// SetTimezone gets a reference to the given NullableString and assigns it to the Timezone field.
func (o *VoyageDetails) SetTimezone(v string) {
	o.Timezone.Set(&v)
}
// SetTimezoneNil sets the value for Timezone to be an explicit nil
func (o *VoyageDetails) SetTimezoneNil() {
	o.Timezone.Set(nil)
}

// UnsetTimezone ensures that no value is present for Timezone, not even an explicit nil
func (o *VoyageDetails) UnsetTimezone() {
	o.Timezone.Unset()
}

// GetVoyageNoList returns the VoyageNoList field value if set, zero value otherwise.
func (o *VoyageDetails) GetVoyageNoList() []string {
	if o == nil || IsNil(o.VoyageNoList) {
		var ret []string
		return ret
	}
	return o.VoyageNoList
}

// GetVoyageNoListOk returns a tuple with the VoyageNoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoyageDetails) GetVoyageNoListOk() ([]string, bool) {
	if o == nil || IsNil(o.VoyageNoList) {
		return nil, false
	}
	return o.VoyageNoList, true
}

// HasVoyageNoList returns a boolean if a field has been set.
func (o *VoyageDetails) HasVoyageNoList() bool {
	if o != nil && !IsNil(o.VoyageNoList) {
		return true
	}

	return false
}

// SetVoyageNoList gets a reference to the given []string and assigns it to the VoyageNoList field.
func (o *VoyageDetails) SetVoyageNoList(v []string) {
	o.VoyageNoList = v
}

func (o VoyageDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VoyageDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ActiveScac.IsSet() {
		toSerialize["active_scac"] = o.ActiveScac.Get()
	}
	if o.ActualArrivalLt.IsSet() {
		toSerialize["actual_arrival_lt"] = o.ActualArrivalLt.Get()
	}
	if o.ActualArrivalUtc.IsSet() {
		toSerialize["actual_arrival_utc"] = o.ActualArrivalUtc.Get()
	}
	if o.ActualDepartureLt.IsSet() {
		toSerialize["actual_departure_lt"] = o.ActualDepartureLt.Get()
	}
	if o.ActualDepartureUtc.IsSet() {
		toSerialize["actual_departure_utc"] = o.ActualDepartureUtc.Get()
	}
	if !IsNil(o.DelayReasons) {
		toSerialize["delay_reasons"] = o.DelayReasons
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Index) {
		toSerialize["index"] = o.Index
	}
	if !IsNil(o.Lat) {
		toSerialize["lat"] = o.Lat
	}
	if !IsNil(o.Lon) {
		toSerialize["lon"] = o.Lon
	}
	if !IsNil(o.PortCode) {
		toSerialize["port_code"] = o.PortCode
	}
	if !IsNil(o.PortName) {
		toSerialize["port_name"] = o.PortName
	}
	if o.PredictedArrivalLt.IsSet() {
		toSerialize["predicted_arrival_lt"] = o.PredictedArrivalLt.Get()
	}
	if o.PredictedArrivalUtc.IsSet() {
		toSerialize["predicted_arrival_utc"] = o.PredictedArrivalUtc.Get()
	}
	if o.PredictedDepartureLt.IsSet() {
		toSerialize["predicted_departure_lt"] = o.PredictedDepartureLt.Get()
	}
	if o.PredictedDepartureUtc.IsSet() {
		toSerialize["predicted_departure_utc"] = o.PredictedDepartureUtc.Get()
	}
	if o.PredictionTimeUtc.IsSet() {
		toSerialize["prediction_time_utc"] = o.PredictionTimeUtc.Get()
	}
	if o.ScheduledArrivalLt.IsSet() {
		toSerialize["scheduled_arrival_lt"] = o.ScheduledArrivalLt.Get()
	}
	if o.ScheduledArrivalUtc.IsSet() {
		toSerialize["scheduled_arrival_utc"] = o.ScheduledArrivalUtc.Get()
	}
	if o.ScheduledDepartureLt.IsSet() {
		toSerialize["scheduled_departure_lt"] = o.ScheduledDepartureLt.Get()
	}
	if o.ScheduledDepartureUtc.IsSet() {
		toSerialize["scheduled_departure_utc"] = o.ScheduledDepartureUtc.Get()
	}
	if o.Timezone.IsSet() {
		toSerialize["timezone"] = o.Timezone.Get()
	}
	if !IsNil(o.VoyageNoList) {
		toSerialize["voyage_no_list"] = o.VoyageNoList
	}
	return toSerialize, nil
}

type NullableVoyageDetails struct {
	value *VoyageDetails
	isSet bool
}

func (v NullableVoyageDetails) Get() *VoyageDetails {
	return v.value
}

func (v *NullableVoyageDetails) Set(val *VoyageDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableVoyageDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableVoyageDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVoyageDetails(val *VoyageDetails) *NullableVoyageDetails {
	return &NullableVoyageDetails{value: val, isSet: true}
}

func (v NullableVoyageDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVoyageDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


