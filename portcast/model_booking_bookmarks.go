/*
Portcast API (1.1.0) - Bill of Lading Tracking

**This documentation is for the latest version of the Portcast Bill of Lading Tracking API.**  There are two variables used in this documentation: 1. `api-url`: the url to use for accessing the API. The official url is `https://api.portcast.io` 2. `x-api-key`: the access token to send along with every request to the API. This key will be provided to each organisation upon API access activation  The general workflow is as below:  1. Create the bill of lading bookmark if it does not exist already (`POST {{api-url}}/api/v1/eta/bill-of-lading-bookmarks`). 2. A bookmark must contain `carrier_no`, `bl_no` and `cntr_no` information. This will return the bill of lading bookmark information created. Record the `id` field from the response. 3. Wait for predictions to be generated. This could take up to 5 mins. 5. Query for the tracking results based on the `id` recorded earlier (`GET {{api-url}}/api/v1/eta/tracking/bill-of-lading-bookmarks/<id>`) 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package portcast

import (
	"encoding/json"
)

// BookingBookmarks struct for BookingBookmarks
type BookingBookmarks struct {
	Containers *[]string `json:"containers,omitempty"`
	Status *string `json:"status,omitempty"`
	Message *string `json:"message,omitempty"`
	Response *[]BookingBookmarkResponse `json:"response,omitempty"`
}

// NewBookingBookmarks instantiates a new BookingBookmarks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBookingBookmarks() *BookingBookmarks {
	this := BookingBookmarks{}
	return &this
}

// NewBookingBookmarksWithDefaults instantiates a new BookingBookmarks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBookingBookmarksWithDefaults() *BookingBookmarks {
	this := BookingBookmarks{}
	return &this
}

// GetContainers returns the Containers field value if set, zero value otherwise.
func (o *BookingBookmarks) GetContainers() []string {
	if o == nil || o.Containers == nil {
		var ret []string
		return ret
	}
	return *o.Containers
}

// GetContainersOk returns a tuple with the Containers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookingBookmarks) GetContainersOk() (*[]string, bool) {
	if o == nil || o.Containers == nil {
		return nil, false
	}
	return o.Containers, true
}

// HasContainers returns a boolean if a field has been set.
func (o *BookingBookmarks) HasContainers() bool {
	if o != nil && o.Containers != nil {
		return true
	}

	return false
}

// SetContainers gets a reference to the given []string and assigns it to the Containers field.
func (o *BookingBookmarks) SetContainers(v []string) {
	o.Containers = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *BookingBookmarks) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookingBookmarks) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *BookingBookmarks) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *BookingBookmarks) SetStatus(v string) {
	o.Status = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *BookingBookmarks) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookingBookmarks) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *BookingBookmarks) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *BookingBookmarks) SetMessage(v string) {
	o.Message = &v
}

// GetResponse returns the Response field value if set, zero value otherwise.
func (o *BookingBookmarks) GetResponse() []BookingBookmarkResponse {
	if o == nil || o.Response == nil {
		var ret []BookingBookmarkResponse
		return ret
	}
	return *o.Response
}

// GetResponseOk returns a tuple with the Response field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookingBookmarks) GetResponseOk() (*[]BookingBookmarkResponse, bool) {
	if o == nil || o.Response == nil {
		return nil, false
	}
	return o.Response, true
}

// HasResponse returns a boolean if a field has been set.
func (o *BookingBookmarks) HasResponse() bool {
	if o != nil && o.Response != nil {
		return true
	}

	return false
}

// SetResponse gets a reference to the given []BookingBookmarkResponse and assigns it to the Response field.
func (o *BookingBookmarks) SetResponse(v []BookingBookmarkResponse) {
	o.Response = &v
}

func (o BookingBookmarks) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Containers != nil {
		toSerialize["containers"] = o.Containers
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if o.Response != nil {
		toSerialize["response"] = o.Response
	}
	return json.Marshal(toSerialize)
}

type NullableBookingBookmarks struct {
	value *BookingBookmarks
	isSet bool
}

func (v NullableBookingBookmarks) Get() *BookingBookmarks {
	return v.value
}

func (v *NullableBookingBookmarks) Set(val *BookingBookmarks) {
	v.value = val
	v.isSet = true
}

func (v NullableBookingBookmarks) IsSet() bool {
	return v.isSet
}

func (v *NullableBookingBookmarks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBookingBookmarks(val *BookingBookmarks) *NullableBookingBookmarks {
	return &NullableBookingBookmarks{value: val, isSet: true}
}

func (v NullableBookingBookmarks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBookingBookmarks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


