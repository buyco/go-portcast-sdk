/*
Container Tracking API

This documentation defines how the users can utilize the Portcast API to retrieve the latest Track and Trace Data for any container, bill of lading or booking across 100+ carriers and 2500+ ports across the globe.  What's changed in the version 2.0? Find out more about it [here](https://support.portcast.io/support/solutions/articles/151000074289-api-release-notes-april-2023-)!!

API version: 2.0
Contact: support@portcast.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package portcast

import (
	"encoding/json"
)

// checks if the DelayReasonsVesselChange type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DelayReasonsVesselChange{}

// DelayReasonsVesselChange Detailed view into the change in vessels
type DelayReasonsVesselChange struct {
	// IMO for the last recorded vessel
	ComparisonVessel NullableFloat32 `json:"comparison_vessel,omitempty"`
	// IMO for the latest recorded vessel
	UpdatedVessel NullableFloat32 `json:"updated_vessel,omitempty"`
}

// NewDelayReasonsVesselChange instantiates a new DelayReasonsVesselChange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDelayReasonsVesselChange() *DelayReasonsVesselChange {
	this := DelayReasonsVesselChange{}
	return &this
}

// NewDelayReasonsVesselChangeWithDefaults instantiates a new DelayReasonsVesselChange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDelayReasonsVesselChangeWithDefaults() *DelayReasonsVesselChange {
	this := DelayReasonsVesselChange{}
	return &this
}

// GetComparisonVessel returns the ComparisonVessel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DelayReasonsVesselChange) GetComparisonVessel() float32 {
	if o == nil || IsNil(o.ComparisonVessel.Get()) {
		var ret float32
		return ret
	}
	return *o.ComparisonVessel.Get()
}

// GetComparisonVesselOk returns a tuple with the ComparisonVessel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DelayReasonsVesselChange) GetComparisonVesselOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ComparisonVessel.Get(), o.ComparisonVessel.IsSet()
}

// HasComparisonVessel returns a boolean if a field has been set.
func (o *DelayReasonsVesselChange) HasComparisonVessel() bool {
	if o != nil && o.ComparisonVessel.IsSet() {
		return true
	}

	return false
}

// SetComparisonVessel gets a reference to the given NullableFloat32 and assigns it to the ComparisonVessel field.
func (o *DelayReasonsVesselChange) SetComparisonVessel(v float32) {
	o.ComparisonVessel.Set(&v)
}

// SetComparisonVesselNil sets the value for ComparisonVessel to be an explicit nil
func (o *DelayReasonsVesselChange) SetComparisonVesselNil() {
	o.ComparisonVessel.Set(nil)
}

// UnsetComparisonVessel ensures that no value is present for ComparisonVessel, not even an explicit nil
func (o *DelayReasonsVesselChange) UnsetComparisonVessel() {
	o.ComparisonVessel.Unset()
}

// GetUpdatedVessel returns the UpdatedVessel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DelayReasonsVesselChange) GetUpdatedVessel() float32 {
	if o == nil || IsNil(o.UpdatedVessel.Get()) {
		var ret float32
		return ret
	}
	return *o.UpdatedVessel.Get()
}

// GetUpdatedVesselOk returns a tuple with the UpdatedVessel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DelayReasonsVesselChange) GetUpdatedVesselOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedVessel.Get(), o.UpdatedVessel.IsSet()
}

// HasUpdatedVessel returns a boolean if a field has been set.
func (o *DelayReasonsVesselChange) HasUpdatedVessel() bool {
	if o != nil && o.UpdatedVessel.IsSet() {
		return true
	}

	return false
}

// SetUpdatedVessel gets a reference to the given NullableFloat32 and assigns it to the UpdatedVessel field.
func (o *DelayReasonsVesselChange) SetUpdatedVessel(v float32) {
	o.UpdatedVessel.Set(&v)
}

// SetUpdatedVesselNil sets the value for UpdatedVessel to be an explicit nil
func (o *DelayReasonsVesselChange) SetUpdatedVesselNil() {
	o.UpdatedVessel.Set(nil)
}

// UnsetUpdatedVessel ensures that no value is present for UpdatedVessel, not even an explicit nil
func (o *DelayReasonsVesselChange) UnsetUpdatedVessel() {
	o.UpdatedVessel.Unset()
}

func (o DelayReasonsVesselChange) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DelayReasonsVesselChange) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ComparisonVessel.IsSet() {
		toSerialize["comparison_vessel"] = o.ComparisonVessel.Get()
	}
	if o.UpdatedVessel.IsSet() {
		toSerialize["updated_vessel"] = o.UpdatedVessel.Get()
	}
	return toSerialize, nil
}

type NullableDelayReasonsVesselChange struct {
	value *DelayReasonsVesselChange
	isSet bool
}

func (v NullableDelayReasonsVesselChange) Get() *DelayReasonsVesselChange {
	return v.value
}

func (v *NullableDelayReasonsVesselChange) Set(val *DelayReasonsVesselChange) {
	v.value = val
	v.isSet = true
}

func (v NullableDelayReasonsVesselChange) IsSet() bool {
	return v.isSet
}

func (v *NullableDelayReasonsVesselChange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDelayReasonsVesselChange(val *DelayReasonsVesselChange) *NullableDelayReasonsVesselChange {
	return &NullableDelayReasonsVesselChange{value: val, isSet: true}
}

func (v NullableDelayReasonsVesselChange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDelayReasonsVesselChange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
