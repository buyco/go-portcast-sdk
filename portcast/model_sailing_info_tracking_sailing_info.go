/*
Container Tracking API

This documentation defines how the users can utilize the Portcast API to retrieve the latest Track and Trace Data for any container, bill of lading or booking across 100+ carriers and 2500+ ports across the globe.  What's changed in the version 2.0? Find out more about it [here](https://support.portcast.io/support/solutions/articles/151000074289-api-release-notes-april-2023-)!!

API version: 2.0
Contact: support@portcast.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package portcast

import (
	"encoding/json"
	"time"
)

// checks if the SailingInfoTrackingSailingInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SailingInfoTrackingSailingInfo{}

// SailingInfoTrackingSailingInfo Details for this specific leg of the journey
type SailingInfoTrackingSailingInfo struct {
	// Carrier SCAC Code
	CarrierNo *string `json:"carrier_no,omitempty"`
	// Sailing Info Creation Date
	Created NullableTime `json:"created,omitempty"`
	// Unique Identifier for the Sailing Info
	Id *string `json:"id,omitempty"`
	// Vessel IMO for the Vessel associated with this specific journey leg
	Imo NullableString `json:"imo,omitempty"`
	// Defines if the sailing info is active/latest or not
	IsActive *bool `json:"is_active,omitempty"`
	// Target Location UNLOCODE for this specific leg of the journey
	Pod NullableString `json:"pod,omitempty"`
	// Actual Arrival Time at the target port location - Local Time
	PodActualArrivalLt NullableString `json:"pod_actual_arrival_lt,omitempty"`
	// Actual Arrival Time at the target port location as per AIS Data - Local Time
	PodActualArrivalLtFromAis NullableString `json:"pod_actual_arrival_lt_from_ais,omitempty"`
	// Actual Departure Time from the target port location as per AIS Data - Local Time
	PodActualDepartureLtFromAis NullableString `json:"pod_actual_departure_lt_from_ais,omitempty"`
	// Actual Time of Discharge at the target port location - Local Time
	PodActualDischargeLt NullableString `json:"pod_actual_discharge_lt,omitempty"`
	// Target Location Name for this specific leg of the journey
	PodName NullableString `json:"pod_name,omitempty"`
	// Portcast Predicted Time of Arrival at the target port location - Local Time
	PodPredictedArrivalLt NullableString `json:"pod_predicted_arrival_lt,omitempty"`
	// Portcast Predicted Time of Departure from the target port location - Local Time
	PodPredictedDepartureLt NullableString `json:"pod_predicted_departure_lt,omitempty"`
	// Scheduled Time of Arrival at the target port location - Local Time
	PodScheduledArrivalLt NullableString `json:"pod_scheduled_arrival_lt,omitempty"`
	// Scheduled Time of Arrival at the target port location as per Vessel Schedule - Local Time
	PodScheduledArrivalLtFromSchedule NullableString `json:"pod_scheduled_arrival_lt_from_schedule,omitempty"`
	// Scheduled Time of Departure from the target port location as per Vessel Schedule - Local Time
	PodScheduledDepartureLtFromSchedule NullableString `json:"pod_scheduled_departure_lt_from_schedule,omitempty"`
	// Scheduled Discharge Time at the target port location - Local Time
	PodScheduledDischargeLt NullableString `json:"pod_scheduled_discharge_lt,omitempty"`
	// Terminal Name for the Target Port for this specific leg of the journey
	PodTerminalName NullableString `json:"pod_terminal_name,omitempty"`
	// Starting Location UNLOCODE for this specific leg of the journey
	Pol NullableString `json:"pol,omitempty"`
	// Actual Time of Arrival at the starting port location as per AIS Data - Local Time
	PolActualArrivalLtFromAis NullableString `json:"pol_actual_arrival_lt_from_ais,omitempty"`
	// Actual Time of Departure from the starting port location - Local Time
	PolActualDepartureLt NullableString `json:"pol_actual_departure_lt,omitempty"`
	// Actual Time of Departure from the starting port location as per AIS Data - Local Time
	PolActualDepartureLtFromAis NullableString `json:"pol_actual_departure_lt_from_ais,omitempty"`
	// Actual Loading Time at the starting port location - Local Time
	PolActualLoadingLt NullableString `json:"pol_actual_loading_lt,omitempty"`
	// Starting Location Name for this specific leg of the journey
	PolName NullableString `json:"pol_name,omitempty"`
	// Portcast Predicted Time of Arrival at the starting port location - Local Time
	PolPredictedArrivalLt NullableString `json:"pol_predicted_arrival_lt,omitempty"`
	// Portcast Predicted Time of Departure from the starting port location - Local Time
	PolPredictedDepartureLt NullableString `json:"pol_predicted_departure_lt,omitempty"`
	// Scheduled Time of Arrival at the starting port location as per Vessel Schedule- Local Time
	PolScheduledArrivalLtFromSchedule NullableString `json:"pol_scheduled_arrival_lt_from_schedule,omitempty"`
	// Scheduled Time of Departure from the starting port location - Local Time
	PolScheduledDepartureLt NullableString `json:"pol_scheduled_departure_lt,omitempty"`
	// Scheduled Time of Departure from the starting port location as per Vessel Schedule - Local Time
	PolScheduledDepartureLtFromSchedule NullableString `json:"pol_scheduled_departure_lt_from_schedule,omitempty"`
	// Scheduled Loading Time at the starting port location - Local Time
	PolScheduledLoadingLt NullableString `json:"pol_scheduled_loading_lt,omitempty"`
	// Terminal Name for the Port of Loading (POL)
	PolTerminalName NullableString `json:"pol_terminal_name,omitempty"`
	// Sailing Info Updated Date
	Updated NullableTime `json:"updated,omitempty"`
	// Vessel Name for the Vessel Flag for the vessel associated with this specific journey leg
	VesselFlag NullableString `json:"vessel_flag,omitempty"`
	// Defines which leg of the journey this sailing info is for
	VesselLeg *int32 `json:"vessel_leg,omitempty"`
	// Vessel Name for the Vessel associated with this specific journey leg
	VesselName NullableString `json:"vessel_name,omitempty"`
	// Voyage Number associated with this specific journey leg (From container track and trace data) [Most reliable] 
	VoyageNo NullableString `json:"voyage_no,omitempty"`
}

// NewSailingInfoTrackingSailingInfo instantiates a new SailingInfoTrackingSailingInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSailingInfoTrackingSailingInfo() *SailingInfoTrackingSailingInfo {
	this := SailingInfoTrackingSailingInfo{}
	var isActive bool = true
	this.IsActive = &isActive
	var pol string = "USHOU"
	this.Pol = *NewNullableString(&pol)
	var polName string = "HOUSTON"
	this.PolName = *NewNullableString(&polName)
	return &this
}

// NewSailingInfoTrackingSailingInfoWithDefaults instantiates a new SailingInfoTrackingSailingInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSailingInfoTrackingSailingInfoWithDefaults() *SailingInfoTrackingSailingInfo {
	this := SailingInfoTrackingSailingInfo{}
	var isActive bool = true
	this.IsActive = &isActive
	var pol string = "USHOU"
	this.Pol = *NewNullableString(&pol)
	var polName string = "HOUSTON"
	this.PolName = *NewNullableString(&polName)
	return &this
}

// GetCarrierNo returns the CarrierNo field value if set, zero value otherwise.
func (o *SailingInfoTrackingSailingInfo) GetCarrierNo() string {
	if o == nil || IsNil(o.CarrierNo) {
		var ret string
		return ret
	}
	return *o.CarrierNo
}

// GetCarrierNoOk returns a tuple with the CarrierNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SailingInfoTrackingSailingInfo) GetCarrierNoOk() (*string, bool) {
	if o == nil || IsNil(o.CarrierNo) {
		return nil, false
	}
	return o.CarrierNo, true
}

// HasCarrierNo returns a boolean if a field has been set.
func (o *SailingInfoTrackingSailingInfo) HasCarrierNo() bool {
	if o != nil && !IsNil(o.CarrierNo) {
		return true
	}

	return false
}

// SetCarrierNo gets a reference to the given string and assigns it to the CarrierNo field.
func (o *SailingInfoTrackingSailingInfo) SetCarrierNo(v string) {
	o.CarrierNo = &v
}

// GetCreated returns the Created field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SailingInfoTrackingSailingInfo) GetCreated() time.Time {
	if o == nil || IsNil(o.Created.Get()) {
		var ret time.Time
		return ret
	}
	return *o.Created.Get()
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SailingInfoTrackingSailingInfo) GetCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Created.Get(), o.Created.IsSet()
}

// HasCreated returns a boolean if a field has been set.
func (o *SailingInfoTrackingSailingInfo) HasCreated() bool {
	if o != nil && o.Created.IsSet() {
		return true
	}

	return false
}

// SetCreated gets a reference to the given NullableTime and assigns it to the Created field.
func (o *SailingInfoTrackingSailingInfo) SetCreated(v time.Time) {
	o.Created.Set(&v)
}
// SetCreatedNil sets the value for Created to be an explicit nil
func (o *SailingInfoTrackingSailingInfo) SetCreatedNil() {
	o.Created.Set(nil)
}

// UnsetCreated ensures that no value is present for Created, not even an explicit nil
func (o *SailingInfoTrackingSailingInfo) UnsetCreated() {
	o.Created.Unset()
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SailingInfoTrackingSailingInfo) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SailingInfoTrackingSailingInfo) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SailingInfoTrackingSailingInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SailingInfoTrackingSailingInfo) SetId(v string) {
	o.Id = &v
}

// GetImo returns the Imo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SailingInfoTrackingSailingInfo) GetImo() string {
	if o == nil || IsNil(o.Imo.Get()) {
		var ret string
		return ret
	}
	return *o.Imo.Get()
}

// GetImoOk returns a tuple with the Imo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SailingInfoTrackingSailingInfo) GetImoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Imo.Get(), o.Imo.IsSet()
}

// HasImo returns a boolean if a field has been set.
func (o *SailingInfoTrackingSailingInfo) HasImo() bool {
	if o != nil && o.Imo.IsSet() {
		return true
	}

	return false
}

// SetImo gets a reference to the given NullableString and assigns it to the Imo field.
func (o *SailingInfoTrackingSailingInfo) SetImo(v string) {
	o.Imo.Set(&v)
}
// SetImoNil sets the value for Imo to be an explicit nil
func (o *SailingInfoTrackingSailingInfo) SetImoNil() {
	o.Imo.Set(nil)
}

// UnsetImo ensures that no value is present for Imo, not even an explicit nil
func (o *SailingInfoTrackingSailingInfo) UnsetImo() {
	o.Imo.Unset()
}

// GetIsActive returns the IsActive field value if set, zero value otherwise.
func (o *SailingInfoTrackingSailingInfo) GetIsActive() bool {
	if o == nil || IsNil(o.IsActive) {
		var ret bool
		return ret
	}
	return *o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SailingInfoTrackingSailingInfo) GetIsActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.IsActive) {
		return nil, false
	}
	return o.IsActive, true
}

// HasIsActive returns a boolean if a field has been set.
func (o *SailingInfoTrackingSailingInfo) HasIsActive() bool {
	if o != nil && !IsNil(o.IsActive) {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given bool and assigns it to the IsActive field.
func (o *SailingInfoTrackingSailingInfo) SetIsActive(v bool) {
	o.IsActive = &v
}

// GetPod returns the Pod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SailingInfoTrackingSailingInfo) GetPod() string {
	if o == nil || IsNil(o.Pod.Get()) {
		var ret string
		return ret
	}
	return *o.Pod.Get()
}

// GetPodOk returns a tuple with the Pod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SailingInfoTrackingSailingInfo) GetPodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Pod.Get(), o.Pod.IsSet()
}

// HasPod returns a boolean if a field has been set.
func (o *SailingInfoTrackingSailingInfo) HasPod() bool {
	if o != nil && o.Pod.IsSet() {
		return true
	}

	return false
}

// SetPod gets a reference to the given NullableString and assigns it to the Pod field.
func (o *SailingInfoTrackingSailingInfo) SetPod(v string) {
	o.Pod.Set(&v)
}
// SetPodNil sets the value for Pod to be an explicit nil
func (o *SailingInfoTrackingSailingInfo) SetPodNil() {
	o.Pod.Set(nil)
}

// UnsetPod ensures that no value is present for Pod, not even an explicit nil
func (o *SailingInfoTrackingSailingInfo) UnsetPod() {
	o.Pod.Unset()
}

// GetPodActualArrivalLt returns the PodActualArrivalLt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SailingInfoTrackingSailingInfo) GetPodActualArrivalLt() string {
	if o == nil || IsNil(o.PodActualArrivalLt.Get()) {
		var ret string
		return ret
	}
	return *o.PodActualArrivalLt.Get()
}

// GetPodActualArrivalLtOk returns a tuple with the PodActualArrivalLt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SailingInfoTrackingSailingInfo) GetPodActualArrivalLtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PodActualArrivalLt.Get(), o.PodActualArrivalLt.IsSet()
}

// HasPodActualArrivalLt returns a boolean if a field has been set.
func (o *SailingInfoTrackingSailingInfo) HasPodActualArrivalLt() bool {
	if o != nil && o.PodActualArrivalLt.IsSet() {
		return true
	}

	return false
}

// SetPodActualArrivalLt gets a reference to the given NullableString and assigns it to the PodActualArrivalLt field.
func (o *SailingInfoTrackingSailingInfo) SetPodActualArrivalLt(v string) {
	o.PodActualArrivalLt.Set(&v)
}
// SetPodActualArrivalLtNil sets the value for PodActualArrivalLt to be an explicit nil
func (o *SailingInfoTrackingSailingInfo) SetPodActualArrivalLtNil() {
	o.PodActualArrivalLt.Set(nil)
}

// UnsetPodActualArrivalLt ensures that no value is present for PodActualArrivalLt, not even an explicit nil
func (o *SailingInfoTrackingSailingInfo) UnsetPodActualArrivalLt() {
	o.PodActualArrivalLt.Unset()
}

// GetPodActualArrivalLtFromAis returns the PodActualArrivalLtFromAis field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SailingInfoTrackingSailingInfo) GetPodActualArrivalLtFromAis() string {
	if o == nil || IsNil(o.PodActualArrivalLtFromAis.Get()) {
		var ret string
		return ret
	}
	return *o.PodActualArrivalLtFromAis.Get()
}

// GetPodActualArrivalLtFromAisOk returns a tuple with the PodActualArrivalLtFromAis field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SailingInfoTrackingSailingInfo) GetPodActualArrivalLtFromAisOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PodActualArrivalLtFromAis.Get(), o.PodActualArrivalLtFromAis.IsSet()
}

// HasPodActualArrivalLtFromAis returns a boolean if a field has been set.
func (o *SailingInfoTrackingSailingInfo) HasPodActualArrivalLtFromAis() bool {
	if o != nil && o.PodActualArrivalLtFromAis.IsSet() {
		return true
	}

	return false
}

// SetPodActualArrivalLtFromAis gets a reference to the given NullableString and assigns it to the PodActualArrivalLtFromAis field.
func (o *SailingInfoTrackingSailingInfo) SetPodActualArrivalLtFromAis(v string) {
	o.PodActualArrivalLtFromAis.Set(&v)
}
// SetPodActualArrivalLtFromAisNil sets the value for PodActualArrivalLtFromAis to be an explicit nil
func (o *SailingInfoTrackingSailingInfo) SetPodActualArrivalLtFromAisNil() {
	o.PodActualArrivalLtFromAis.Set(nil)
}

// UnsetPodActualArrivalLtFromAis ensures that no value is present for PodActualArrivalLtFromAis, not even an explicit nil
func (o *SailingInfoTrackingSailingInfo) UnsetPodActualArrivalLtFromAis() {
	o.PodActualArrivalLtFromAis.Unset()
}

// GetPodActualDepartureLtFromAis returns the PodActualDepartureLtFromAis field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SailingInfoTrackingSailingInfo) GetPodActualDepartureLtFromAis() string {
	if o == nil || IsNil(o.PodActualDepartureLtFromAis.Get()) {
		var ret string
		return ret
	}
	return *o.PodActualDepartureLtFromAis.Get()
}

// GetPodActualDepartureLtFromAisOk returns a tuple with the PodActualDepartureLtFromAis field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SailingInfoTrackingSailingInfo) GetPodActualDepartureLtFromAisOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PodActualDepartureLtFromAis.Get(), o.PodActualDepartureLtFromAis.IsSet()
}

// HasPodActualDepartureLtFromAis returns a boolean if a field has been set.
func (o *SailingInfoTrackingSailingInfo) HasPodActualDepartureLtFromAis() bool {
	if o != nil && o.PodActualDepartureLtFromAis.IsSet() {
		return true
	}

	return false
}

// SetPodActualDepartureLtFromAis gets a reference to the given NullableString and assigns it to the PodActualDepartureLtFromAis field.
func (o *SailingInfoTrackingSailingInfo) SetPodActualDepartureLtFromAis(v string) {
	o.PodActualDepartureLtFromAis.Set(&v)
}
// SetPodActualDepartureLtFromAisNil sets the value for PodActualDepartureLtFromAis to be an explicit nil
func (o *SailingInfoTrackingSailingInfo) SetPodActualDepartureLtFromAisNil() {
	o.PodActualDepartureLtFromAis.Set(nil)
}

// UnsetPodActualDepartureLtFromAis ensures that no value is present for PodActualDepartureLtFromAis, not even an explicit nil
func (o *SailingInfoTrackingSailingInfo) UnsetPodActualDepartureLtFromAis() {
	o.PodActualDepartureLtFromAis.Unset()
}

// GetPodActualDischargeLt returns the PodActualDischargeLt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SailingInfoTrackingSailingInfo) GetPodActualDischargeLt() string {
	if o == nil || IsNil(o.PodActualDischargeLt.Get()) {
		var ret string
		return ret
	}
	return *o.PodActualDischargeLt.Get()
}

// GetPodActualDischargeLtOk returns a tuple with the PodActualDischargeLt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SailingInfoTrackingSailingInfo) GetPodActualDischargeLtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PodActualDischargeLt.Get(), o.PodActualDischargeLt.IsSet()
}

// HasPodActualDischargeLt returns a boolean if a field has been set.
func (o *SailingInfoTrackingSailingInfo) HasPodActualDischargeLt() bool {
	if o != nil && o.PodActualDischargeLt.IsSet() {
		return true
	}

	return false
}

// SetPodActualDischargeLt gets a reference to the given NullableString and assigns it to the PodActualDischargeLt field.
func (o *SailingInfoTrackingSailingInfo) SetPodActualDischargeLt(v string) {
	o.PodActualDischargeLt.Set(&v)
}
// SetPodActualDischargeLtNil sets the value for PodActualDischargeLt to be an explicit nil
func (o *SailingInfoTrackingSailingInfo) SetPodActualDischargeLtNil() {
	o.PodActualDischargeLt.Set(nil)
}

// UnsetPodActualDischargeLt ensures that no value is present for PodActualDischargeLt, not even an explicit nil
func (o *SailingInfoTrackingSailingInfo) UnsetPodActualDischargeLt() {
	o.PodActualDischargeLt.Unset()
}

// GetPodName returns the PodName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SailingInfoTrackingSailingInfo) GetPodName() string {
	if o == nil || IsNil(o.PodName.Get()) {
		var ret string
		return ret
	}
	return *o.PodName.Get()
}

// GetPodNameOk returns a tuple with the PodName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SailingInfoTrackingSailingInfo) GetPodNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PodName.Get(), o.PodName.IsSet()
}

// HasPodName returns a boolean if a field has been set.
func (o *SailingInfoTrackingSailingInfo) HasPodName() bool {
	if o != nil && o.PodName.IsSet() {
		return true
	}

	return false
}

// SetPodName gets a reference to the given NullableString and assigns it to the PodName field.
func (o *SailingInfoTrackingSailingInfo) SetPodName(v string) {
	o.PodName.Set(&v)
}
// SetPodNameNil sets the value for PodName to be an explicit nil
func (o *SailingInfoTrackingSailingInfo) SetPodNameNil() {
	o.PodName.Set(nil)
}

// UnsetPodName ensures that no value is present for PodName, not even an explicit nil
func (o *SailingInfoTrackingSailingInfo) UnsetPodName() {
	o.PodName.Unset()
}

// GetPodPredictedArrivalLt returns the PodPredictedArrivalLt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SailingInfoTrackingSailingInfo) GetPodPredictedArrivalLt() string {
	if o == nil || IsNil(o.PodPredictedArrivalLt.Get()) {
		var ret string
		return ret
	}
	return *o.PodPredictedArrivalLt.Get()
}

// GetPodPredictedArrivalLtOk returns a tuple with the PodPredictedArrivalLt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SailingInfoTrackingSailingInfo) GetPodPredictedArrivalLtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PodPredictedArrivalLt.Get(), o.PodPredictedArrivalLt.IsSet()
}

// HasPodPredictedArrivalLt returns a boolean if a field has been set.
func (o *SailingInfoTrackingSailingInfo) HasPodPredictedArrivalLt() bool {
	if o != nil && o.PodPredictedArrivalLt.IsSet() {
		return true
	}

	return false
}

// SetPodPredictedArrivalLt gets a reference to the given NullableString and assigns it to the PodPredictedArrivalLt field.
func (o *SailingInfoTrackingSailingInfo) SetPodPredictedArrivalLt(v string) {
	o.PodPredictedArrivalLt.Set(&v)
}
// SetPodPredictedArrivalLtNil sets the value for PodPredictedArrivalLt to be an explicit nil
func (o *SailingInfoTrackingSailingInfo) SetPodPredictedArrivalLtNil() {
	o.PodPredictedArrivalLt.Set(nil)
}

// UnsetPodPredictedArrivalLt ensures that no value is present for PodPredictedArrivalLt, not even an explicit nil
func (o *SailingInfoTrackingSailingInfo) UnsetPodPredictedArrivalLt() {
	o.PodPredictedArrivalLt.Unset()
}

// GetPodPredictedDepartureLt returns the PodPredictedDepartureLt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SailingInfoTrackingSailingInfo) GetPodPredictedDepartureLt() string {
	if o == nil || IsNil(o.PodPredictedDepartureLt.Get()) {
		var ret string
		return ret
	}
	return *o.PodPredictedDepartureLt.Get()
}

// GetPodPredictedDepartureLtOk returns a tuple with the PodPredictedDepartureLt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SailingInfoTrackingSailingInfo) GetPodPredictedDepartureLtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PodPredictedDepartureLt.Get(), o.PodPredictedDepartureLt.IsSet()
}

// HasPodPredictedDepartureLt returns a boolean if a field has been set.
func (o *SailingInfoTrackingSailingInfo) HasPodPredictedDepartureLt() bool {
	if o != nil && o.PodPredictedDepartureLt.IsSet() {
		return true
	}

	return false
}

// SetPodPredictedDepartureLt gets a reference to the given NullableString and assigns it to the PodPredictedDepartureLt field.
func (o *SailingInfoTrackingSailingInfo) SetPodPredictedDepartureLt(v string) {
	o.PodPredictedDepartureLt.Set(&v)
}
// SetPodPredictedDepartureLtNil sets the value for PodPredictedDepartureLt to be an explicit nil
func (o *SailingInfoTrackingSailingInfo) SetPodPredictedDepartureLtNil() {
	o.PodPredictedDepartureLt.Set(nil)
}

// UnsetPodPredictedDepartureLt ensures that no value is present for PodPredictedDepartureLt, not even an explicit nil
func (o *SailingInfoTrackingSailingInfo) UnsetPodPredictedDepartureLt() {
	o.PodPredictedDepartureLt.Unset()
}

// GetPodScheduledArrivalLt returns the PodScheduledArrivalLt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SailingInfoTrackingSailingInfo) GetPodScheduledArrivalLt() string {
	if o == nil || IsNil(o.PodScheduledArrivalLt.Get()) {
		var ret string
		return ret
	}
	return *o.PodScheduledArrivalLt.Get()
}

// GetPodScheduledArrivalLtOk returns a tuple with the PodScheduledArrivalLt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SailingInfoTrackingSailingInfo) GetPodScheduledArrivalLtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PodScheduledArrivalLt.Get(), o.PodScheduledArrivalLt.IsSet()
}

// HasPodScheduledArrivalLt returns a boolean if a field has been set.
func (o *SailingInfoTrackingSailingInfo) HasPodScheduledArrivalLt() bool {
	if o != nil && o.PodScheduledArrivalLt.IsSet() {
		return true
	}

	return false
}

// SetPodScheduledArrivalLt gets a reference to the given NullableString and assigns it to the PodScheduledArrivalLt field.
func (o *SailingInfoTrackingSailingInfo) SetPodScheduledArrivalLt(v string) {
	o.PodScheduledArrivalLt.Set(&v)
}
// SetPodScheduledArrivalLtNil sets the value for PodScheduledArrivalLt to be an explicit nil
func (o *SailingInfoTrackingSailingInfo) SetPodScheduledArrivalLtNil() {
	o.PodScheduledArrivalLt.Set(nil)
}

// UnsetPodScheduledArrivalLt ensures that no value is present for PodScheduledArrivalLt, not even an explicit nil
func (o *SailingInfoTrackingSailingInfo) UnsetPodScheduledArrivalLt() {
	o.PodScheduledArrivalLt.Unset()
}

// GetPodScheduledArrivalLtFromSchedule returns the PodScheduledArrivalLtFromSchedule field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SailingInfoTrackingSailingInfo) GetPodScheduledArrivalLtFromSchedule() string {
	if o == nil || IsNil(o.PodScheduledArrivalLtFromSchedule.Get()) {
		var ret string
		return ret
	}
	return *o.PodScheduledArrivalLtFromSchedule.Get()
}

// GetPodScheduledArrivalLtFromScheduleOk returns a tuple with the PodScheduledArrivalLtFromSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SailingInfoTrackingSailingInfo) GetPodScheduledArrivalLtFromScheduleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PodScheduledArrivalLtFromSchedule.Get(), o.PodScheduledArrivalLtFromSchedule.IsSet()
}

// HasPodScheduledArrivalLtFromSchedule returns a boolean if a field has been set.
func (o *SailingInfoTrackingSailingInfo) HasPodScheduledArrivalLtFromSchedule() bool {
	if o != nil && o.PodScheduledArrivalLtFromSchedule.IsSet() {
		return true
	}

	return false
}

// SetPodScheduledArrivalLtFromSchedule gets a reference to the given NullableString and assigns it to the PodScheduledArrivalLtFromSchedule field.
func (o *SailingInfoTrackingSailingInfo) SetPodScheduledArrivalLtFromSchedule(v string) {
	o.PodScheduledArrivalLtFromSchedule.Set(&v)
}
// SetPodScheduledArrivalLtFromScheduleNil sets the value for PodScheduledArrivalLtFromSchedule to be an explicit nil
func (o *SailingInfoTrackingSailingInfo) SetPodScheduledArrivalLtFromScheduleNil() {
	o.PodScheduledArrivalLtFromSchedule.Set(nil)
}

// UnsetPodScheduledArrivalLtFromSchedule ensures that no value is present for PodScheduledArrivalLtFromSchedule, not even an explicit nil
func (o *SailingInfoTrackingSailingInfo) UnsetPodScheduledArrivalLtFromSchedule() {
	o.PodScheduledArrivalLtFromSchedule.Unset()
}

// GetPodScheduledDepartureLtFromSchedule returns the PodScheduledDepartureLtFromSchedule field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SailingInfoTrackingSailingInfo) GetPodScheduledDepartureLtFromSchedule() string {
	if o == nil || IsNil(o.PodScheduledDepartureLtFromSchedule.Get()) {
		var ret string
		return ret
	}
	return *o.PodScheduledDepartureLtFromSchedule.Get()
}

// GetPodScheduledDepartureLtFromScheduleOk returns a tuple with the PodScheduledDepartureLtFromSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SailingInfoTrackingSailingInfo) GetPodScheduledDepartureLtFromScheduleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PodScheduledDepartureLtFromSchedule.Get(), o.PodScheduledDepartureLtFromSchedule.IsSet()
}

// HasPodScheduledDepartureLtFromSchedule returns a boolean if a field has been set.
func (o *SailingInfoTrackingSailingInfo) HasPodScheduledDepartureLtFromSchedule() bool {
	if o != nil && o.PodScheduledDepartureLtFromSchedule.IsSet() {
		return true
	}

	return false
}

// SetPodScheduledDepartureLtFromSchedule gets a reference to the given NullableString and assigns it to the PodScheduledDepartureLtFromSchedule field.
func (o *SailingInfoTrackingSailingInfo) SetPodScheduledDepartureLtFromSchedule(v string) {
	o.PodScheduledDepartureLtFromSchedule.Set(&v)
}
// SetPodScheduledDepartureLtFromScheduleNil sets the value for PodScheduledDepartureLtFromSchedule to be an explicit nil
func (o *SailingInfoTrackingSailingInfo) SetPodScheduledDepartureLtFromScheduleNil() {
	o.PodScheduledDepartureLtFromSchedule.Set(nil)
}

// UnsetPodScheduledDepartureLtFromSchedule ensures that no value is present for PodScheduledDepartureLtFromSchedule, not even an explicit nil
func (o *SailingInfoTrackingSailingInfo) UnsetPodScheduledDepartureLtFromSchedule() {
	o.PodScheduledDepartureLtFromSchedule.Unset()
}

// GetPodScheduledDischargeLt returns the PodScheduledDischargeLt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SailingInfoTrackingSailingInfo) GetPodScheduledDischargeLt() string {
	if o == nil || IsNil(o.PodScheduledDischargeLt.Get()) {
		var ret string
		return ret
	}
	return *o.PodScheduledDischargeLt.Get()
}

// GetPodScheduledDischargeLtOk returns a tuple with the PodScheduledDischargeLt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SailingInfoTrackingSailingInfo) GetPodScheduledDischargeLtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PodScheduledDischargeLt.Get(), o.PodScheduledDischargeLt.IsSet()
}

// HasPodScheduledDischargeLt returns a boolean if a field has been set.
func (o *SailingInfoTrackingSailingInfo) HasPodScheduledDischargeLt() bool {
	if o != nil && o.PodScheduledDischargeLt.IsSet() {
		return true
	}

	return false
}

// SetPodScheduledDischargeLt gets a reference to the given NullableString and assigns it to the PodScheduledDischargeLt field.
func (o *SailingInfoTrackingSailingInfo) SetPodScheduledDischargeLt(v string) {
	o.PodScheduledDischargeLt.Set(&v)
}
// SetPodScheduledDischargeLtNil sets the value for PodScheduledDischargeLt to be an explicit nil
func (o *SailingInfoTrackingSailingInfo) SetPodScheduledDischargeLtNil() {
	o.PodScheduledDischargeLt.Set(nil)
}

// UnsetPodScheduledDischargeLt ensures that no value is present for PodScheduledDischargeLt, not even an explicit nil
func (o *SailingInfoTrackingSailingInfo) UnsetPodScheduledDischargeLt() {
	o.PodScheduledDischargeLt.Unset()
}

// GetPodTerminalName returns the PodTerminalName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SailingInfoTrackingSailingInfo) GetPodTerminalName() string {
	if o == nil || IsNil(o.PodTerminalName.Get()) {
		var ret string
		return ret
	}
	return *o.PodTerminalName.Get()
}

// GetPodTerminalNameOk returns a tuple with the PodTerminalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SailingInfoTrackingSailingInfo) GetPodTerminalNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PodTerminalName.Get(), o.PodTerminalName.IsSet()
}

// HasPodTerminalName returns a boolean if a field has been set.
func (o *SailingInfoTrackingSailingInfo) HasPodTerminalName() bool {
	if o != nil && o.PodTerminalName.IsSet() {
		return true
	}

	return false
}

// SetPodTerminalName gets a reference to the given NullableString and assigns it to the PodTerminalName field.
func (o *SailingInfoTrackingSailingInfo) SetPodTerminalName(v string) {
	o.PodTerminalName.Set(&v)
}
// SetPodTerminalNameNil sets the value for PodTerminalName to be an explicit nil
func (o *SailingInfoTrackingSailingInfo) SetPodTerminalNameNil() {
	o.PodTerminalName.Set(nil)
}

// UnsetPodTerminalName ensures that no value is present for PodTerminalName, not even an explicit nil
func (o *SailingInfoTrackingSailingInfo) UnsetPodTerminalName() {
	o.PodTerminalName.Unset()
}

// GetPol returns the Pol field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SailingInfoTrackingSailingInfo) GetPol() string {
	if o == nil || IsNil(o.Pol.Get()) {
		var ret string
		return ret
	}
	return *o.Pol.Get()
}

// GetPolOk returns a tuple with the Pol field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SailingInfoTrackingSailingInfo) GetPolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Pol.Get(), o.Pol.IsSet()
}

// HasPol returns a boolean if a field has been set.
func (o *SailingInfoTrackingSailingInfo) HasPol() bool {
	if o != nil && o.Pol.IsSet() {
		return true
	}

	return false
}

// SetPol gets a reference to the given NullableString and assigns it to the Pol field.
func (o *SailingInfoTrackingSailingInfo) SetPol(v string) {
	o.Pol.Set(&v)
}
// SetPolNil sets the value for Pol to be an explicit nil
func (o *SailingInfoTrackingSailingInfo) SetPolNil() {
	o.Pol.Set(nil)
}

// UnsetPol ensures that no value is present for Pol, not even an explicit nil
func (o *SailingInfoTrackingSailingInfo) UnsetPol() {
	o.Pol.Unset()
}

// GetPolActualArrivalLtFromAis returns the PolActualArrivalLtFromAis field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SailingInfoTrackingSailingInfo) GetPolActualArrivalLtFromAis() string {
	if o == nil || IsNil(o.PolActualArrivalLtFromAis.Get()) {
		var ret string
		return ret
	}
	return *o.PolActualArrivalLtFromAis.Get()
}

// GetPolActualArrivalLtFromAisOk returns a tuple with the PolActualArrivalLtFromAis field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SailingInfoTrackingSailingInfo) GetPolActualArrivalLtFromAisOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PolActualArrivalLtFromAis.Get(), o.PolActualArrivalLtFromAis.IsSet()
}

// HasPolActualArrivalLtFromAis returns a boolean if a field has been set.
func (o *SailingInfoTrackingSailingInfo) HasPolActualArrivalLtFromAis() bool {
	if o != nil && o.PolActualArrivalLtFromAis.IsSet() {
		return true
	}

	return false
}

// SetPolActualArrivalLtFromAis gets a reference to the given NullableString and assigns it to the PolActualArrivalLtFromAis field.
func (o *SailingInfoTrackingSailingInfo) SetPolActualArrivalLtFromAis(v string) {
	o.PolActualArrivalLtFromAis.Set(&v)
}
// SetPolActualArrivalLtFromAisNil sets the value for PolActualArrivalLtFromAis to be an explicit nil
func (o *SailingInfoTrackingSailingInfo) SetPolActualArrivalLtFromAisNil() {
	o.PolActualArrivalLtFromAis.Set(nil)
}

// UnsetPolActualArrivalLtFromAis ensures that no value is present for PolActualArrivalLtFromAis, not even an explicit nil
func (o *SailingInfoTrackingSailingInfo) UnsetPolActualArrivalLtFromAis() {
	o.PolActualArrivalLtFromAis.Unset()
}

// GetPolActualDepartureLt returns the PolActualDepartureLt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SailingInfoTrackingSailingInfo) GetPolActualDepartureLt() string {
	if o == nil || IsNil(o.PolActualDepartureLt.Get()) {
		var ret string
		return ret
	}
	return *o.PolActualDepartureLt.Get()
}

// GetPolActualDepartureLtOk returns a tuple with the PolActualDepartureLt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SailingInfoTrackingSailingInfo) GetPolActualDepartureLtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PolActualDepartureLt.Get(), o.PolActualDepartureLt.IsSet()
}

// HasPolActualDepartureLt returns a boolean if a field has been set.
func (o *SailingInfoTrackingSailingInfo) HasPolActualDepartureLt() bool {
	if o != nil && o.PolActualDepartureLt.IsSet() {
		return true
	}

	return false
}

// SetPolActualDepartureLt gets a reference to the given NullableString and assigns it to the PolActualDepartureLt field.
func (o *SailingInfoTrackingSailingInfo) SetPolActualDepartureLt(v string) {
	o.PolActualDepartureLt.Set(&v)
}
// SetPolActualDepartureLtNil sets the value for PolActualDepartureLt to be an explicit nil
func (o *SailingInfoTrackingSailingInfo) SetPolActualDepartureLtNil() {
	o.PolActualDepartureLt.Set(nil)
}

// UnsetPolActualDepartureLt ensures that no value is present for PolActualDepartureLt, not even an explicit nil
func (o *SailingInfoTrackingSailingInfo) UnsetPolActualDepartureLt() {
	o.PolActualDepartureLt.Unset()
}

// GetPolActualDepartureLtFromAis returns the PolActualDepartureLtFromAis field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SailingInfoTrackingSailingInfo) GetPolActualDepartureLtFromAis() string {
	if o == nil || IsNil(o.PolActualDepartureLtFromAis.Get()) {
		var ret string
		return ret
	}
	return *o.PolActualDepartureLtFromAis.Get()
}

// GetPolActualDepartureLtFromAisOk returns a tuple with the PolActualDepartureLtFromAis field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SailingInfoTrackingSailingInfo) GetPolActualDepartureLtFromAisOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PolActualDepartureLtFromAis.Get(), o.PolActualDepartureLtFromAis.IsSet()
}

// HasPolActualDepartureLtFromAis returns a boolean if a field has been set.
func (o *SailingInfoTrackingSailingInfo) HasPolActualDepartureLtFromAis() bool {
	if o != nil && o.PolActualDepartureLtFromAis.IsSet() {
		return true
	}

	return false
}

// SetPolActualDepartureLtFromAis gets a reference to the given NullableString and assigns it to the PolActualDepartureLtFromAis field.
func (o *SailingInfoTrackingSailingInfo) SetPolActualDepartureLtFromAis(v string) {
	o.PolActualDepartureLtFromAis.Set(&v)
}
// SetPolActualDepartureLtFromAisNil sets the value for PolActualDepartureLtFromAis to be an explicit nil
func (o *SailingInfoTrackingSailingInfo) SetPolActualDepartureLtFromAisNil() {
	o.PolActualDepartureLtFromAis.Set(nil)
}

// UnsetPolActualDepartureLtFromAis ensures that no value is present for PolActualDepartureLtFromAis, not even an explicit nil
func (o *SailingInfoTrackingSailingInfo) UnsetPolActualDepartureLtFromAis() {
	o.PolActualDepartureLtFromAis.Unset()
}

// GetPolActualLoadingLt returns the PolActualLoadingLt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SailingInfoTrackingSailingInfo) GetPolActualLoadingLt() string {
	if o == nil || IsNil(o.PolActualLoadingLt.Get()) {
		var ret string
		return ret
	}
	return *o.PolActualLoadingLt.Get()
}

// GetPolActualLoadingLtOk returns a tuple with the PolActualLoadingLt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SailingInfoTrackingSailingInfo) GetPolActualLoadingLtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PolActualLoadingLt.Get(), o.PolActualLoadingLt.IsSet()
}

// HasPolActualLoadingLt returns a boolean if a field has been set.
func (o *SailingInfoTrackingSailingInfo) HasPolActualLoadingLt() bool {
	if o != nil && o.PolActualLoadingLt.IsSet() {
		return true
	}

	return false
}

// SetPolActualLoadingLt gets a reference to the given NullableString and assigns it to the PolActualLoadingLt field.
func (o *SailingInfoTrackingSailingInfo) SetPolActualLoadingLt(v string) {
	o.PolActualLoadingLt.Set(&v)
}
// SetPolActualLoadingLtNil sets the value for PolActualLoadingLt to be an explicit nil
func (o *SailingInfoTrackingSailingInfo) SetPolActualLoadingLtNil() {
	o.PolActualLoadingLt.Set(nil)
}

// UnsetPolActualLoadingLt ensures that no value is present for PolActualLoadingLt, not even an explicit nil
func (o *SailingInfoTrackingSailingInfo) UnsetPolActualLoadingLt() {
	o.PolActualLoadingLt.Unset()
}

// GetPolName returns the PolName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SailingInfoTrackingSailingInfo) GetPolName() string {
	if o == nil || IsNil(o.PolName.Get()) {
		var ret string
		return ret
	}
	return *o.PolName.Get()
}

// GetPolNameOk returns a tuple with the PolName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SailingInfoTrackingSailingInfo) GetPolNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PolName.Get(), o.PolName.IsSet()
}

// HasPolName returns a boolean if a field has been set.
func (o *SailingInfoTrackingSailingInfo) HasPolName() bool {
	if o != nil && o.PolName.IsSet() {
		return true
	}

	return false
}

// SetPolName gets a reference to the given NullableString and assigns it to the PolName field.
func (o *SailingInfoTrackingSailingInfo) SetPolName(v string) {
	o.PolName.Set(&v)
}
// SetPolNameNil sets the value for PolName to be an explicit nil
func (o *SailingInfoTrackingSailingInfo) SetPolNameNil() {
	o.PolName.Set(nil)
}

// UnsetPolName ensures that no value is present for PolName, not even an explicit nil
func (o *SailingInfoTrackingSailingInfo) UnsetPolName() {
	o.PolName.Unset()
}

// GetPolPredictedArrivalLt returns the PolPredictedArrivalLt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SailingInfoTrackingSailingInfo) GetPolPredictedArrivalLt() string {
	if o == nil || IsNil(o.PolPredictedArrivalLt.Get()) {
		var ret string
		return ret
	}
	return *o.PolPredictedArrivalLt.Get()
}

// GetPolPredictedArrivalLtOk returns a tuple with the PolPredictedArrivalLt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SailingInfoTrackingSailingInfo) GetPolPredictedArrivalLtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PolPredictedArrivalLt.Get(), o.PolPredictedArrivalLt.IsSet()
}

// HasPolPredictedArrivalLt returns a boolean if a field has been set.
func (o *SailingInfoTrackingSailingInfo) HasPolPredictedArrivalLt() bool {
	if o != nil && o.PolPredictedArrivalLt.IsSet() {
		return true
	}

	return false
}

// SetPolPredictedArrivalLt gets a reference to the given NullableString and assigns it to the PolPredictedArrivalLt field.
func (o *SailingInfoTrackingSailingInfo) SetPolPredictedArrivalLt(v string) {
	o.PolPredictedArrivalLt.Set(&v)
}
// SetPolPredictedArrivalLtNil sets the value for PolPredictedArrivalLt to be an explicit nil
func (o *SailingInfoTrackingSailingInfo) SetPolPredictedArrivalLtNil() {
	o.PolPredictedArrivalLt.Set(nil)
}

// UnsetPolPredictedArrivalLt ensures that no value is present for PolPredictedArrivalLt, not even an explicit nil
func (o *SailingInfoTrackingSailingInfo) UnsetPolPredictedArrivalLt() {
	o.PolPredictedArrivalLt.Unset()
}

// GetPolPredictedDepartureLt returns the PolPredictedDepartureLt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SailingInfoTrackingSailingInfo) GetPolPredictedDepartureLt() string {
	if o == nil || IsNil(o.PolPredictedDepartureLt.Get()) {
		var ret string
		return ret
	}
	return *o.PolPredictedDepartureLt.Get()
}

// GetPolPredictedDepartureLtOk returns a tuple with the PolPredictedDepartureLt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SailingInfoTrackingSailingInfo) GetPolPredictedDepartureLtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PolPredictedDepartureLt.Get(), o.PolPredictedDepartureLt.IsSet()
}

// HasPolPredictedDepartureLt returns a boolean if a field has been set.
func (o *SailingInfoTrackingSailingInfo) HasPolPredictedDepartureLt() bool {
	if o != nil && o.PolPredictedDepartureLt.IsSet() {
		return true
	}

	return false
}

// SetPolPredictedDepartureLt gets a reference to the given NullableString and assigns it to the PolPredictedDepartureLt field.
func (o *SailingInfoTrackingSailingInfo) SetPolPredictedDepartureLt(v string) {
	o.PolPredictedDepartureLt.Set(&v)
}
// SetPolPredictedDepartureLtNil sets the value for PolPredictedDepartureLt to be an explicit nil
func (o *SailingInfoTrackingSailingInfo) SetPolPredictedDepartureLtNil() {
	o.PolPredictedDepartureLt.Set(nil)
}

// UnsetPolPredictedDepartureLt ensures that no value is present for PolPredictedDepartureLt, not even an explicit nil
func (o *SailingInfoTrackingSailingInfo) UnsetPolPredictedDepartureLt() {
	o.PolPredictedDepartureLt.Unset()
}

// GetPolScheduledArrivalLtFromSchedule returns the PolScheduledArrivalLtFromSchedule field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SailingInfoTrackingSailingInfo) GetPolScheduledArrivalLtFromSchedule() string {
	if o == nil || IsNil(o.PolScheduledArrivalLtFromSchedule.Get()) {
		var ret string
		return ret
	}
	return *o.PolScheduledArrivalLtFromSchedule.Get()
}

// GetPolScheduledArrivalLtFromScheduleOk returns a tuple with the PolScheduledArrivalLtFromSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SailingInfoTrackingSailingInfo) GetPolScheduledArrivalLtFromScheduleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PolScheduledArrivalLtFromSchedule.Get(), o.PolScheduledArrivalLtFromSchedule.IsSet()
}

// HasPolScheduledArrivalLtFromSchedule returns a boolean if a field has been set.
func (o *SailingInfoTrackingSailingInfo) HasPolScheduledArrivalLtFromSchedule() bool {
	if o != nil && o.PolScheduledArrivalLtFromSchedule.IsSet() {
		return true
	}

	return false
}

// SetPolScheduledArrivalLtFromSchedule gets a reference to the given NullableString and assigns it to the PolScheduledArrivalLtFromSchedule field.
func (o *SailingInfoTrackingSailingInfo) SetPolScheduledArrivalLtFromSchedule(v string) {
	o.PolScheduledArrivalLtFromSchedule.Set(&v)
}
// SetPolScheduledArrivalLtFromScheduleNil sets the value for PolScheduledArrivalLtFromSchedule to be an explicit nil
func (o *SailingInfoTrackingSailingInfo) SetPolScheduledArrivalLtFromScheduleNil() {
	o.PolScheduledArrivalLtFromSchedule.Set(nil)
}

// UnsetPolScheduledArrivalLtFromSchedule ensures that no value is present for PolScheduledArrivalLtFromSchedule, not even an explicit nil
func (o *SailingInfoTrackingSailingInfo) UnsetPolScheduledArrivalLtFromSchedule() {
	o.PolScheduledArrivalLtFromSchedule.Unset()
}

// GetPolScheduledDepartureLt returns the PolScheduledDepartureLt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SailingInfoTrackingSailingInfo) GetPolScheduledDepartureLt() string {
	if o == nil || IsNil(o.PolScheduledDepartureLt.Get()) {
		var ret string
		return ret
	}
	return *o.PolScheduledDepartureLt.Get()
}

// GetPolScheduledDepartureLtOk returns a tuple with the PolScheduledDepartureLt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SailingInfoTrackingSailingInfo) GetPolScheduledDepartureLtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PolScheduledDepartureLt.Get(), o.PolScheduledDepartureLt.IsSet()
}

// HasPolScheduledDepartureLt returns a boolean if a field has been set.
func (o *SailingInfoTrackingSailingInfo) HasPolScheduledDepartureLt() bool {
	if o != nil && o.PolScheduledDepartureLt.IsSet() {
		return true
	}

	return false
}

// SetPolScheduledDepartureLt gets a reference to the given NullableString and assigns it to the PolScheduledDepartureLt field.
func (o *SailingInfoTrackingSailingInfo) SetPolScheduledDepartureLt(v string) {
	o.PolScheduledDepartureLt.Set(&v)
}
// SetPolScheduledDepartureLtNil sets the value for PolScheduledDepartureLt to be an explicit nil
func (o *SailingInfoTrackingSailingInfo) SetPolScheduledDepartureLtNil() {
	o.PolScheduledDepartureLt.Set(nil)
}

// UnsetPolScheduledDepartureLt ensures that no value is present for PolScheduledDepartureLt, not even an explicit nil
func (o *SailingInfoTrackingSailingInfo) UnsetPolScheduledDepartureLt() {
	o.PolScheduledDepartureLt.Unset()
}

// GetPolScheduledDepartureLtFromSchedule returns the PolScheduledDepartureLtFromSchedule field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SailingInfoTrackingSailingInfo) GetPolScheduledDepartureLtFromSchedule() string {
	if o == nil || IsNil(o.PolScheduledDepartureLtFromSchedule.Get()) {
		var ret string
		return ret
	}
	return *o.PolScheduledDepartureLtFromSchedule.Get()
}

// GetPolScheduledDepartureLtFromScheduleOk returns a tuple with the PolScheduledDepartureLtFromSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SailingInfoTrackingSailingInfo) GetPolScheduledDepartureLtFromScheduleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PolScheduledDepartureLtFromSchedule.Get(), o.PolScheduledDepartureLtFromSchedule.IsSet()
}

// HasPolScheduledDepartureLtFromSchedule returns a boolean if a field has been set.
func (o *SailingInfoTrackingSailingInfo) HasPolScheduledDepartureLtFromSchedule() bool {
	if o != nil && o.PolScheduledDepartureLtFromSchedule.IsSet() {
		return true
	}

	return false
}

// SetPolScheduledDepartureLtFromSchedule gets a reference to the given NullableString and assigns it to the PolScheduledDepartureLtFromSchedule field.
func (o *SailingInfoTrackingSailingInfo) SetPolScheduledDepartureLtFromSchedule(v string) {
	o.PolScheduledDepartureLtFromSchedule.Set(&v)
}
// SetPolScheduledDepartureLtFromScheduleNil sets the value for PolScheduledDepartureLtFromSchedule to be an explicit nil
func (o *SailingInfoTrackingSailingInfo) SetPolScheduledDepartureLtFromScheduleNil() {
	o.PolScheduledDepartureLtFromSchedule.Set(nil)
}

// UnsetPolScheduledDepartureLtFromSchedule ensures that no value is present for PolScheduledDepartureLtFromSchedule, not even an explicit nil
func (o *SailingInfoTrackingSailingInfo) UnsetPolScheduledDepartureLtFromSchedule() {
	o.PolScheduledDepartureLtFromSchedule.Unset()
}

// GetPolScheduledLoadingLt returns the PolScheduledLoadingLt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SailingInfoTrackingSailingInfo) GetPolScheduledLoadingLt() string {
	if o == nil || IsNil(o.PolScheduledLoadingLt.Get()) {
		var ret string
		return ret
	}
	return *o.PolScheduledLoadingLt.Get()
}

// GetPolScheduledLoadingLtOk returns a tuple with the PolScheduledLoadingLt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SailingInfoTrackingSailingInfo) GetPolScheduledLoadingLtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PolScheduledLoadingLt.Get(), o.PolScheduledLoadingLt.IsSet()
}

// HasPolScheduledLoadingLt returns a boolean if a field has been set.
func (o *SailingInfoTrackingSailingInfo) HasPolScheduledLoadingLt() bool {
	if o != nil && o.PolScheduledLoadingLt.IsSet() {
		return true
	}

	return false
}

// SetPolScheduledLoadingLt gets a reference to the given NullableString and assigns it to the PolScheduledLoadingLt field.
func (o *SailingInfoTrackingSailingInfo) SetPolScheduledLoadingLt(v string) {
	o.PolScheduledLoadingLt.Set(&v)
}
// SetPolScheduledLoadingLtNil sets the value for PolScheduledLoadingLt to be an explicit nil
func (o *SailingInfoTrackingSailingInfo) SetPolScheduledLoadingLtNil() {
	o.PolScheduledLoadingLt.Set(nil)
}

// UnsetPolScheduledLoadingLt ensures that no value is present for PolScheduledLoadingLt, not even an explicit nil
func (o *SailingInfoTrackingSailingInfo) UnsetPolScheduledLoadingLt() {
	o.PolScheduledLoadingLt.Unset()
}

// GetPolTerminalName returns the PolTerminalName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SailingInfoTrackingSailingInfo) GetPolTerminalName() string {
	if o == nil || IsNil(o.PolTerminalName.Get()) {
		var ret string
		return ret
	}
	return *o.PolTerminalName.Get()
}

// GetPolTerminalNameOk returns a tuple with the PolTerminalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SailingInfoTrackingSailingInfo) GetPolTerminalNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PolTerminalName.Get(), o.PolTerminalName.IsSet()
}

// HasPolTerminalName returns a boolean if a field has been set.
func (o *SailingInfoTrackingSailingInfo) HasPolTerminalName() bool {
	if o != nil && o.PolTerminalName.IsSet() {
		return true
	}

	return false
}

// SetPolTerminalName gets a reference to the given NullableString and assigns it to the PolTerminalName field.
func (o *SailingInfoTrackingSailingInfo) SetPolTerminalName(v string) {
	o.PolTerminalName.Set(&v)
}
// SetPolTerminalNameNil sets the value for PolTerminalName to be an explicit nil
func (o *SailingInfoTrackingSailingInfo) SetPolTerminalNameNil() {
	o.PolTerminalName.Set(nil)
}

// UnsetPolTerminalName ensures that no value is present for PolTerminalName, not even an explicit nil
func (o *SailingInfoTrackingSailingInfo) UnsetPolTerminalName() {
	o.PolTerminalName.Unset()
}

// GetUpdated returns the Updated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SailingInfoTrackingSailingInfo) GetUpdated() time.Time {
	if o == nil || IsNil(o.Updated.Get()) {
		var ret time.Time
		return ret
	}
	return *o.Updated.Get()
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SailingInfoTrackingSailingInfo) GetUpdatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Updated.Get(), o.Updated.IsSet()
}

// HasUpdated returns a boolean if a field has been set.
func (o *SailingInfoTrackingSailingInfo) HasUpdated() bool {
	if o != nil && o.Updated.IsSet() {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given NullableTime and assigns it to the Updated field.
func (o *SailingInfoTrackingSailingInfo) SetUpdated(v time.Time) {
	o.Updated.Set(&v)
}
// SetUpdatedNil sets the value for Updated to be an explicit nil
func (o *SailingInfoTrackingSailingInfo) SetUpdatedNil() {
	o.Updated.Set(nil)
}

// UnsetUpdated ensures that no value is present for Updated, not even an explicit nil
func (o *SailingInfoTrackingSailingInfo) UnsetUpdated() {
	o.Updated.Unset()
}

// GetVesselFlag returns the VesselFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SailingInfoTrackingSailingInfo) GetVesselFlag() string {
	if o == nil || IsNil(o.VesselFlag.Get()) {
		var ret string
		return ret
	}
	return *o.VesselFlag.Get()
}

// GetVesselFlagOk returns a tuple with the VesselFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SailingInfoTrackingSailingInfo) GetVesselFlagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VesselFlag.Get(), o.VesselFlag.IsSet()
}

// HasVesselFlag returns a boolean if a field has been set.
func (o *SailingInfoTrackingSailingInfo) HasVesselFlag() bool {
	if o != nil && o.VesselFlag.IsSet() {
		return true
	}

	return false
}

// SetVesselFlag gets a reference to the given NullableString and assigns it to the VesselFlag field.
func (o *SailingInfoTrackingSailingInfo) SetVesselFlag(v string) {
	o.VesselFlag.Set(&v)
}
// SetVesselFlagNil sets the value for VesselFlag to be an explicit nil
func (o *SailingInfoTrackingSailingInfo) SetVesselFlagNil() {
	o.VesselFlag.Set(nil)
}

// UnsetVesselFlag ensures that no value is present for VesselFlag, not even an explicit nil
func (o *SailingInfoTrackingSailingInfo) UnsetVesselFlag() {
	o.VesselFlag.Unset()
}

// GetVesselLeg returns the VesselLeg field value if set, zero value otherwise.
func (o *SailingInfoTrackingSailingInfo) GetVesselLeg() int32 {
	if o == nil || IsNil(o.VesselLeg) {
		var ret int32
		return ret
	}
	return *o.VesselLeg
}

// GetVesselLegOk returns a tuple with the VesselLeg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SailingInfoTrackingSailingInfo) GetVesselLegOk() (*int32, bool) {
	if o == nil || IsNil(o.VesselLeg) {
		return nil, false
	}
	return o.VesselLeg, true
}

// HasVesselLeg returns a boolean if a field has been set.
func (o *SailingInfoTrackingSailingInfo) HasVesselLeg() bool {
	if o != nil && !IsNil(o.VesselLeg) {
		return true
	}

	return false
}

// SetVesselLeg gets a reference to the given int32 and assigns it to the VesselLeg field.
func (o *SailingInfoTrackingSailingInfo) SetVesselLeg(v int32) {
	o.VesselLeg = &v
}

// GetVesselName returns the VesselName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SailingInfoTrackingSailingInfo) GetVesselName() string {
	if o == nil || IsNil(o.VesselName.Get()) {
		var ret string
		return ret
	}
	return *o.VesselName.Get()
}

// GetVesselNameOk returns a tuple with the VesselName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SailingInfoTrackingSailingInfo) GetVesselNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VesselName.Get(), o.VesselName.IsSet()
}

// HasVesselName returns a boolean if a field has been set.
func (o *SailingInfoTrackingSailingInfo) HasVesselName() bool {
	if o != nil && o.VesselName.IsSet() {
		return true
	}

	return false
}

// SetVesselName gets a reference to the given NullableString and assigns it to the VesselName field.
func (o *SailingInfoTrackingSailingInfo) SetVesselName(v string) {
	o.VesselName.Set(&v)
}
// SetVesselNameNil sets the value for VesselName to be an explicit nil
func (o *SailingInfoTrackingSailingInfo) SetVesselNameNil() {
	o.VesselName.Set(nil)
}

// UnsetVesselName ensures that no value is present for VesselName, not even an explicit nil
func (o *SailingInfoTrackingSailingInfo) UnsetVesselName() {
	o.VesselName.Unset()
}

// GetVoyageNo returns the VoyageNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SailingInfoTrackingSailingInfo) GetVoyageNo() string {
	if o == nil || IsNil(o.VoyageNo.Get()) {
		var ret string
		return ret
	}
	return *o.VoyageNo.Get()
}

// GetVoyageNoOk returns a tuple with the VoyageNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SailingInfoTrackingSailingInfo) GetVoyageNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VoyageNo.Get(), o.VoyageNo.IsSet()
}

// HasVoyageNo returns a boolean if a field has been set.
func (o *SailingInfoTrackingSailingInfo) HasVoyageNo() bool {
	if o != nil && o.VoyageNo.IsSet() {
		return true
	}

	return false
}

// SetVoyageNo gets a reference to the given NullableString and assigns it to the VoyageNo field.
func (o *SailingInfoTrackingSailingInfo) SetVoyageNo(v string) {
	o.VoyageNo.Set(&v)
}
// SetVoyageNoNil sets the value for VoyageNo to be an explicit nil
func (o *SailingInfoTrackingSailingInfo) SetVoyageNoNil() {
	o.VoyageNo.Set(nil)
}

// UnsetVoyageNo ensures that no value is present for VoyageNo, not even an explicit nil
func (o *SailingInfoTrackingSailingInfo) UnsetVoyageNo() {
	o.VoyageNo.Unset()
}

func (o SailingInfoTrackingSailingInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SailingInfoTrackingSailingInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CarrierNo) {
		toSerialize["carrier_no"] = o.CarrierNo
	}
	if o.Created.IsSet() {
		toSerialize["created"] = o.Created.Get()
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.Imo.IsSet() {
		toSerialize["imo"] = o.Imo.Get()
	}
	if !IsNil(o.IsActive) {
		toSerialize["is_active"] = o.IsActive
	}
	if o.Pod.IsSet() {
		toSerialize["pod"] = o.Pod.Get()
	}
	if o.PodActualArrivalLt.IsSet() {
		toSerialize["pod_actual_arrival_lt"] = o.PodActualArrivalLt.Get()
	}
	if o.PodActualArrivalLtFromAis.IsSet() {
		toSerialize["pod_actual_arrival_lt_from_ais"] = o.PodActualArrivalLtFromAis.Get()
	}
	if o.PodActualDepartureLtFromAis.IsSet() {
		toSerialize["pod_actual_departure_lt_from_ais"] = o.PodActualDepartureLtFromAis.Get()
	}
	if o.PodActualDischargeLt.IsSet() {
		toSerialize["pod_actual_discharge_lt"] = o.PodActualDischargeLt.Get()
	}
	if o.PodName.IsSet() {
		toSerialize["pod_name"] = o.PodName.Get()
	}
	if o.PodPredictedArrivalLt.IsSet() {
		toSerialize["pod_predicted_arrival_lt"] = o.PodPredictedArrivalLt.Get()
	}
	if o.PodPredictedDepartureLt.IsSet() {
		toSerialize["pod_predicted_departure_lt"] = o.PodPredictedDepartureLt.Get()
	}
	if o.PodScheduledArrivalLt.IsSet() {
		toSerialize["pod_scheduled_arrival_lt"] = o.PodScheduledArrivalLt.Get()
	}
	if o.PodScheduledArrivalLtFromSchedule.IsSet() {
		toSerialize["pod_scheduled_arrival_lt_from_schedule"] = o.PodScheduledArrivalLtFromSchedule.Get()
	}
	if o.PodScheduledDepartureLtFromSchedule.IsSet() {
		toSerialize["pod_scheduled_departure_lt_from_schedule"] = o.PodScheduledDepartureLtFromSchedule.Get()
	}
	if o.PodScheduledDischargeLt.IsSet() {
		toSerialize["pod_scheduled_discharge_lt"] = o.PodScheduledDischargeLt.Get()
	}
	if o.PodTerminalName.IsSet() {
		toSerialize["pod_terminal_name"] = o.PodTerminalName.Get()
	}
	if o.Pol.IsSet() {
		toSerialize["pol"] = o.Pol.Get()
	}
	if o.PolActualArrivalLtFromAis.IsSet() {
		toSerialize["pol_actual_arrival_lt_from_ais"] = o.PolActualArrivalLtFromAis.Get()
	}
	if o.PolActualDepartureLt.IsSet() {
		toSerialize["pol_actual_departure_lt"] = o.PolActualDepartureLt.Get()
	}
	if o.PolActualDepartureLtFromAis.IsSet() {
		toSerialize["pol_actual_departure_lt_from_ais"] = o.PolActualDepartureLtFromAis.Get()
	}
	if o.PolActualLoadingLt.IsSet() {
		toSerialize["pol_actual_loading_lt"] = o.PolActualLoadingLt.Get()
	}
	if o.PolName.IsSet() {
		toSerialize["pol_name"] = o.PolName.Get()
	}
	if o.PolPredictedArrivalLt.IsSet() {
		toSerialize["pol_predicted_arrival_lt"] = o.PolPredictedArrivalLt.Get()
	}
	if o.PolPredictedDepartureLt.IsSet() {
		toSerialize["pol_predicted_departure_lt"] = o.PolPredictedDepartureLt.Get()
	}
	if o.PolScheduledArrivalLtFromSchedule.IsSet() {
		toSerialize["pol_scheduled_arrival_lt_from_schedule"] = o.PolScheduledArrivalLtFromSchedule.Get()
	}
	if o.PolScheduledDepartureLt.IsSet() {
		toSerialize["pol_scheduled_departure_lt"] = o.PolScheduledDepartureLt.Get()
	}
	if o.PolScheduledDepartureLtFromSchedule.IsSet() {
		toSerialize["pol_scheduled_departure_lt_from_schedule"] = o.PolScheduledDepartureLtFromSchedule.Get()
	}
	if o.PolScheduledLoadingLt.IsSet() {
		toSerialize["pol_scheduled_loading_lt"] = o.PolScheduledLoadingLt.Get()
	}
	if o.PolTerminalName.IsSet() {
		toSerialize["pol_terminal_name"] = o.PolTerminalName.Get()
	}
	if o.Updated.IsSet() {
		toSerialize["updated"] = o.Updated.Get()
	}
	if o.VesselFlag.IsSet() {
		toSerialize["vessel_flag"] = o.VesselFlag.Get()
	}
	if !IsNil(o.VesselLeg) {
		toSerialize["vessel_leg"] = o.VesselLeg
	}
	if o.VesselName.IsSet() {
		toSerialize["vessel_name"] = o.VesselName.Get()
	}
	if o.VoyageNo.IsSet() {
		toSerialize["voyage_no"] = o.VoyageNo.Get()
	}
	return toSerialize, nil
}

type NullableSailingInfoTrackingSailingInfo struct {
	value *SailingInfoTrackingSailingInfo
	isSet bool
}

func (v NullableSailingInfoTrackingSailingInfo) Get() *SailingInfoTrackingSailingInfo {
	return v.value
}

func (v *NullableSailingInfoTrackingSailingInfo) Set(val *SailingInfoTrackingSailingInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableSailingInfoTrackingSailingInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableSailingInfoTrackingSailingInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSailingInfoTrackingSailingInfo(val *SailingInfoTrackingSailingInfo) *NullableSailingInfoTrackingSailingInfo {
	return &NullableSailingInfoTrackingSailingInfo{value: val, isSet: true}
}

func (v NullableSailingInfoTrackingSailingInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSailingInfoTrackingSailingInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


