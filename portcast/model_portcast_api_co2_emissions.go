/*
Container Tracking API

This documentation defines how the users can utilize the Portcast API to retrieve the latest Track and Trace Data for any container, bill of lading or booking across 100+ carriers and 2500+ ports across the globe.  What's changed in the version 2.0? Find out more about it [here](https://support.portcast.io/support/solutions/articles/151000074289-api-release-notes-april-2023-)!!

API version: 2.0
Contact: support@portcast.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package portcast

import (
	"encoding/json"
)

// checks if the PortcastAPICo2Emissions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PortcastAPICo2Emissions{}

// PortcastAPICo2Emissions Carbon Dioxide Emmissions Details
type PortcastAPICo2Emissions struct {
	// Total emissions for each container:   (gm/ TEU)    Sum of the emissions derived from WTT and TTW analyses. This offers the carbon footprint associated with the entire lifecycle of the shipped goods.  
	Total NullableInt32 `json:"total,omitempty"`
	// Well-to-Tank (WTT) monitoring:   (gm/ TEU)    Measurement of carbon emissions across the entire fuel supply chain; that is, the energy required to extract, produce, and transport a fuel from its source.  
	Wtt NullableInt32 `json:"wtt,omitempty"`
	// Tank-to-Wheels (TTW) monitoring:   (gm/ TEU)    Measurement of emissions generated during the actual vessel operation, providing a real-time understanding of carbon output during voyages.  
	Ttw NullableInt32 `json:"ttw,omitempty"`
	// Co2e intensity:   (kg/ ton-km)    Signifies the carbon efficiency for each container, thus empowering stakeholders to define actions on reducing emissions.  
	Intensity NullableFloat32 `json:"intensity,omitempty"`
}

// NewPortcastAPICo2Emissions instantiates a new PortcastAPICo2Emissions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortcastAPICo2Emissions() *PortcastAPICo2Emissions {
	this := PortcastAPICo2Emissions{}
	return &this
}

// NewPortcastAPICo2EmissionsWithDefaults instantiates a new PortcastAPICo2Emissions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortcastAPICo2EmissionsWithDefaults() *PortcastAPICo2Emissions {
	this := PortcastAPICo2Emissions{}
	return &this
}

// GetTotal returns the Total field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortcastAPICo2Emissions) GetTotal() int32 {
	if o == nil || IsNil(o.Total.Get()) {
		var ret int32
		return ret
	}
	return *o.Total.Get()
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortcastAPICo2Emissions) GetTotalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Total.Get(), o.Total.IsSet()
}

// HasTotal returns a boolean if a field has been set.
func (o *PortcastAPICo2Emissions) HasTotal() bool {
	if o != nil && o.Total.IsSet() {
		return true
	}

	return false
}

// SetTotal gets a reference to the given NullableInt32 and assigns it to the Total field.
func (o *PortcastAPICo2Emissions) SetTotal(v int32) {
	o.Total.Set(&v)
}
// SetTotalNil sets the value for Total to be an explicit nil
func (o *PortcastAPICo2Emissions) SetTotalNil() {
	o.Total.Set(nil)
}

// UnsetTotal ensures that no value is present for Total, not even an explicit nil
func (o *PortcastAPICo2Emissions) UnsetTotal() {
	o.Total.Unset()
}

// GetWtt returns the Wtt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortcastAPICo2Emissions) GetWtt() int32 {
	if o == nil || IsNil(o.Wtt.Get()) {
		var ret int32
		return ret
	}
	return *o.Wtt.Get()
}

// GetWttOk returns a tuple with the Wtt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortcastAPICo2Emissions) GetWttOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Wtt.Get(), o.Wtt.IsSet()
}

// HasWtt returns a boolean if a field has been set.
func (o *PortcastAPICo2Emissions) HasWtt() bool {
	if o != nil && o.Wtt.IsSet() {
		return true
	}

	return false
}

// SetWtt gets a reference to the given NullableInt32 and assigns it to the Wtt field.
func (o *PortcastAPICo2Emissions) SetWtt(v int32) {
	o.Wtt.Set(&v)
}
// SetWttNil sets the value for Wtt to be an explicit nil
func (o *PortcastAPICo2Emissions) SetWttNil() {
	o.Wtt.Set(nil)
}

// UnsetWtt ensures that no value is present for Wtt, not even an explicit nil
func (o *PortcastAPICo2Emissions) UnsetWtt() {
	o.Wtt.Unset()
}

// GetTtw returns the Ttw field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortcastAPICo2Emissions) GetTtw() int32 {
	if o == nil || IsNil(o.Ttw.Get()) {
		var ret int32
		return ret
	}
	return *o.Ttw.Get()
}

// GetTtwOk returns a tuple with the Ttw field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortcastAPICo2Emissions) GetTtwOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Ttw.Get(), o.Ttw.IsSet()
}

// HasTtw returns a boolean if a field has been set.
func (o *PortcastAPICo2Emissions) HasTtw() bool {
	if o != nil && o.Ttw.IsSet() {
		return true
	}

	return false
}

// SetTtw gets a reference to the given NullableInt32 and assigns it to the Ttw field.
func (o *PortcastAPICo2Emissions) SetTtw(v int32) {
	o.Ttw.Set(&v)
}
// SetTtwNil sets the value for Ttw to be an explicit nil
func (o *PortcastAPICo2Emissions) SetTtwNil() {
	o.Ttw.Set(nil)
}

// UnsetTtw ensures that no value is present for Ttw, not even an explicit nil
func (o *PortcastAPICo2Emissions) UnsetTtw() {
	o.Ttw.Unset()
}

// GetIntensity returns the Intensity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortcastAPICo2Emissions) GetIntensity() float32 {
	if o == nil || IsNil(o.Intensity.Get()) {
		var ret float32
		return ret
	}
	return *o.Intensity.Get()
}

// GetIntensityOk returns a tuple with the Intensity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortcastAPICo2Emissions) GetIntensityOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Intensity.Get(), o.Intensity.IsSet()
}

// HasIntensity returns a boolean if a field has been set.
func (o *PortcastAPICo2Emissions) HasIntensity() bool {
	if o != nil && o.Intensity.IsSet() {
		return true
	}

	return false
}

// SetIntensity gets a reference to the given NullableFloat32 and assigns it to the Intensity field.
func (o *PortcastAPICo2Emissions) SetIntensity(v float32) {
	o.Intensity.Set(&v)
}
// SetIntensityNil sets the value for Intensity to be an explicit nil
func (o *PortcastAPICo2Emissions) SetIntensityNil() {
	o.Intensity.Set(nil)
}

// UnsetIntensity ensures that no value is present for Intensity, not even an explicit nil
func (o *PortcastAPICo2Emissions) UnsetIntensity() {
	o.Intensity.Unset()
}

func (o PortcastAPICo2Emissions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PortcastAPICo2Emissions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Total.IsSet() {
		toSerialize["total"] = o.Total.Get()
	}
	if o.Wtt.IsSet() {
		toSerialize["wtt"] = o.Wtt.Get()
	}
	if o.Ttw.IsSet() {
		toSerialize["ttw"] = o.Ttw.Get()
	}
	if o.Intensity.IsSet() {
		toSerialize["intensity"] = o.Intensity.Get()
	}
	return toSerialize, nil
}

type NullablePortcastAPICo2Emissions struct {
	value *PortcastAPICo2Emissions
	isSet bool
}

func (v NullablePortcastAPICo2Emissions) Get() *PortcastAPICo2Emissions {
	return v.value
}

func (v *NullablePortcastAPICo2Emissions) Set(val *PortcastAPICo2Emissions) {
	v.value = val
	v.isSet = true
}

func (v NullablePortcastAPICo2Emissions) IsSet() bool {
	return v.isSet
}

func (v *NullablePortcastAPICo2Emissions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortcastAPICo2Emissions(val *PortcastAPICo2Emissions) *NullablePortcastAPICo2Emissions {
	return &NullablePortcastAPICo2Emissions{value: val, isSet: true}
}

func (v NullablePortcastAPICo2Emissions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortcastAPICo2Emissions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


