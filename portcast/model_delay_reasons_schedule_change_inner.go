/*
Container Tracking API

This documentation defines how the users can utilize the Portcast API to retrieve the latest Track and Trace Data for any container, bill of lading or booking across 100+ carriers and 2500+ ports across the globe.  What's changed in the version 2.0? Find out more about it [here](https://support.portcast.io/support/solutions/articles/151000074289-api-release-notes-april-2023-)!!

API version: 2.0
Contact: support@portcast.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package portcast

import (
	"encoding/json"
	"time"
)

// checks if the DelayReasonsScheduleChangeInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DelayReasonsScheduleChangeInner{}

// DelayReasonsScheduleChangeInner struct for DelayReasonsScheduleChangeInner
type DelayReasonsScheduleChangeInner struct {
	// Defines if it's a loading, departure or arrival event
	EventTypeCode *string `json:"event_type_code,omitempty"`
	// Defines if the change is happening at the POL, POT or POD
	LocationTypeCode *string `json:"location_type_code,omitempty"`
	// Latest changed datetime information - port local time
	NewDate *time.Time `json:"new_date,omitempty"`
	// Last recorded datetime information - port local time
	OldDate *time.Time `json:"old_date,omitempty"`
}

// NewDelayReasonsScheduleChangeInner instantiates a new DelayReasonsScheduleChangeInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDelayReasonsScheduleChangeInner() *DelayReasonsScheduleChangeInner {
	this := DelayReasonsScheduleChangeInner{}
	return &this
}

// NewDelayReasonsScheduleChangeInnerWithDefaults instantiates a new DelayReasonsScheduleChangeInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDelayReasonsScheduleChangeInnerWithDefaults() *DelayReasonsScheduleChangeInner {
	this := DelayReasonsScheduleChangeInner{}
	return &this
}

// GetEventTypeCode returns the EventTypeCode field value if set, zero value otherwise.
func (o *DelayReasonsScheduleChangeInner) GetEventTypeCode() string {
	if o == nil || IsNil(o.EventTypeCode) {
		var ret string
		return ret
	}
	return *o.EventTypeCode
}

// GetEventTypeCodeOk returns a tuple with the EventTypeCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DelayReasonsScheduleChangeInner) GetEventTypeCodeOk() (*string, bool) {
	if o == nil || IsNil(o.EventTypeCode) {
		return nil, false
	}
	return o.EventTypeCode, true
}

// HasEventTypeCode returns a boolean if a field has been set.
func (o *DelayReasonsScheduleChangeInner) HasEventTypeCode() bool {
	if o != nil && !IsNil(o.EventTypeCode) {
		return true
	}

	return false
}

// SetEventTypeCode gets a reference to the given string and assigns it to the EventTypeCode field.
func (o *DelayReasonsScheduleChangeInner) SetEventTypeCode(v string) {
	o.EventTypeCode = &v
}

// GetLocationTypeCode returns the LocationTypeCode field value if set, zero value otherwise.
func (o *DelayReasonsScheduleChangeInner) GetLocationTypeCode() string {
	if o == nil || IsNil(o.LocationTypeCode) {
		var ret string
		return ret
	}
	return *o.LocationTypeCode
}

// GetLocationTypeCodeOk returns a tuple with the LocationTypeCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DelayReasonsScheduleChangeInner) GetLocationTypeCodeOk() (*string, bool) {
	if o == nil || IsNil(o.LocationTypeCode) {
		return nil, false
	}
	return o.LocationTypeCode, true
}

// HasLocationTypeCode returns a boolean if a field has been set.
func (o *DelayReasonsScheduleChangeInner) HasLocationTypeCode() bool {
	if o != nil && !IsNil(o.LocationTypeCode) {
		return true
	}

	return false
}

// SetLocationTypeCode gets a reference to the given string and assigns it to the LocationTypeCode field.
func (o *DelayReasonsScheduleChangeInner) SetLocationTypeCode(v string) {
	o.LocationTypeCode = &v
}

// GetNewDate returns the NewDate field value if set, zero value otherwise.
func (o *DelayReasonsScheduleChangeInner) GetNewDate() time.Time {
	if o == nil || IsNil(o.NewDate) {
		var ret time.Time
		return ret
	}
	return *o.NewDate
}

// GetNewDateOk returns a tuple with the NewDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DelayReasonsScheduleChangeInner) GetNewDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.NewDate) {
		return nil, false
	}
	return o.NewDate, true
}

// HasNewDate returns a boolean if a field has been set.
func (o *DelayReasonsScheduleChangeInner) HasNewDate() bool {
	if o != nil && !IsNil(o.NewDate) {
		return true
	}

	return false
}

// SetNewDate gets a reference to the given time.Time and assigns it to the NewDate field.
func (o *DelayReasonsScheduleChangeInner) SetNewDate(v time.Time) {
	o.NewDate = &v
}

// GetOldDate returns the OldDate field value if set, zero value otherwise.
func (o *DelayReasonsScheduleChangeInner) GetOldDate() time.Time {
	if o == nil || IsNil(o.OldDate) {
		var ret time.Time
		return ret
	}
	return *o.OldDate
}

// GetOldDateOk returns a tuple with the OldDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DelayReasonsScheduleChangeInner) GetOldDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.OldDate) {
		return nil, false
	}
	return o.OldDate, true
}

// HasOldDate returns a boolean if a field has been set.
func (o *DelayReasonsScheduleChangeInner) HasOldDate() bool {
	if o != nil && !IsNil(o.OldDate) {
		return true
	}

	return false
}

// SetOldDate gets a reference to the given time.Time and assigns it to the OldDate field.
func (o *DelayReasonsScheduleChangeInner) SetOldDate(v time.Time) {
	o.OldDate = &v
}

func (o DelayReasonsScheduleChangeInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DelayReasonsScheduleChangeInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EventTypeCode) {
		toSerialize["event_type_code"] = o.EventTypeCode
	}
	if !IsNil(o.LocationTypeCode) {
		toSerialize["location_type_code"] = o.LocationTypeCode
	}
	if !IsNil(o.NewDate) {
		toSerialize["new_date"] = o.NewDate
	}
	if !IsNil(o.OldDate) {
		toSerialize["old_date"] = o.OldDate
	}
	return toSerialize, nil
}

type NullableDelayReasonsScheduleChangeInner struct {
	value *DelayReasonsScheduleChangeInner
	isSet bool
}

func (v NullableDelayReasonsScheduleChangeInner) Get() *DelayReasonsScheduleChangeInner {
	return v.value
}

func (v *NullableDelayReasonsScheduleChangeInner) Set(val *DelayReasonsScheduleChangeInner) {
	v.value = val
	v.isSet = true
}

func (v NullableDelayReasonsScheduleChangeInner) IsSet() bool {
	return v.isSet
}

func (v *NullableDelayReasonsScheduleChangeInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDelayReasonsScheduleChangeInner(val *DelayReasonsScheduleChangeInner) *NullableDelayReasonsScheduleChangeInner {
	return &NullableDelayReasonsScheduleChangeInner{value: val, isSet: true}
}

func (v NullableDelayReasonsScheduleChangeInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDelayReasonsScheduleChangeInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


