/*
Portcast API (1.1.0) - Bill of Lading Tracking

**This documentation is for the latest version of the Portcast Bill of Lading Tracking API.**  There are two variables used in this documentation: 1. `api-url`: the url to use for accessing the API. The official url is `https://api.portcast.io` 2. `x-api-key`: the access token to send along with every request to the API. This key will be provided to each organisation upon API access activation  The general workflow is as below:  1. Create the bill of lading bookmark if it does not exist already (`POST {{api-url}}/api/v1/eta/bill-of-lading-bookmarks`). 2. A bookmark must contain `carrier_no`, `bl_no` and `cntr_no` information. This will return the bill of lading bookmark information created. Record the `id` field from the response. 3. Wait for predictions to be generated. This could take up to 5 mins. 5. Query for the tracking results based on the `id` recorded earlier (`GET {{api-url}}/api/v1/eta/tracking/bill-of-lading-bookmarks/<id>`) 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package portcast

import (
	"encoding/json"
	"time"
)

// TrackingEventSailingInfo struct for TrackingEventSailingInfo
type TrackingEventSailingInfo struct {
	CarrierNo *string `json:"carrier_no,omitempty"`
	Created *time.Time `json:"created,omitempty"`
	Id *string `json:"id,omitempty"`
	Imo *string `json:"imo,omitempty"`
	IsActive *bool `json:"is_active,omitempty"`
	Pod *string `json:"pod,omitempty"`
	PodActualArrivalLt *string `json:"pod_actual_arrival_lt,omitempty"`
	PodActualArrivalLtFromAis *string `json:"pod_actual_arrival_lt_from_ais,omitempty"`
	PodActualDepartureLt *string `json:"pod_actual_departure_lt,omitempty"`
	PodActualDepartureLtFromAis *string `json:"pod_actual_departure_lt_from_ais,omitempty"`
	PodActualDischargeLt *string `json:"pod_actual_discharge_lt,omitempty"`
	PodName *string `json:"pod_name,omitempty"`
	PodPredictedArrivalLt *string `json:"pod_predicted_arrival_lt,omitempty"`
	PodPredictedDepartureLt *string `json:"pod_predicted_departure_lt,omitempty"`
	PodScheduledArrivalLt *string `json:"pod_scheduled_arrival_lt,omitempty"`
	PodScheduledArrivalLtFromSchedule *string `json:"pod_scheduled_arrival_lt_from_schedule,omitempty"`
	PodScheduledDischargeLt *string `json:"pod_scheduled_discharge_lt,omitempty"`
	PodScheduledDepartureLtFromSchedule *string `json:"pod_scheduled_departure_lt_from_schedule,omitempty"`
	Pol *string `json:"pol,omitempty"`
	PolActualArrivalLtFromAis *string `json:"pol_actual_arrival_lt_from_ais,omitempty"`
	PolActualDepartureLtFromAis *string `json:"pol_actual_departure_lt_from_ais,omitempty"`
	PolActualLoadingLt *string `json:"pol_actual_loading_lt,omitempty"`
	PolName *string `json:"pol_name,omitempty"`
	PolPredictedArrivalLt *string `json:"pol_predicted_arrival_lt,omitempty"`
	PolPredictedDepartureLt *string `json:"pol_predicted_departure_lt,omitempty"`
	PolScheduledArrivalLtFromSchedule *string `json:"pol_scheduled_arrival_lt_from_schedule,omitempty"`
	PolScheduledDepartureLt *string `json:"pol_scheduled_departure_lt,omitempty"`
	PolScheduledLoadingLt *string `json:"pol_scheduled_loading_lt,omitempty"`
	StatusCode *string `json:"status_code,omitempty"`
	Updated *time.Time `json:"updated,omitempty"`
	VesselLeg *int32 `json:"vessel_leg,omitempty"`
	VesselName *string `json:"vessel_name,omitempty"`
	VoyageNo *string `json:"voyage_no,omitempty"`
}

// NewTrackingEventSailingInfo instantiates a new TrackingEventSailingInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrackingEventSailingInfo() *TrackingEventSailingInfo {
	this := TrackingEventSailingInfo{}
	return &this
}

// NewTrackingEventSailingInfoWithDefaults instantiates a new TrackingEventSailingInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrackingEventSailingInfoWithDefaults() *TrackingEventSailingInfo {
	this := TrackingEventSailingInfo{}
	return &this
}

// GetCarrierNo returns the CarrierNo field value if set, zero value otherwise.
func (o *TrackingEventSailingInfo) GetCarrierNo() string {
	if o == nil || o.CarrierNo == nil {
		var ret string
		return ret
	}
	return *o.CarrierNo
}

// GetCarrierNoOk returns a tuple with the CarrierNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingEventSailingInfo) GetCarrierNoOk() (*string, bool) {
	if o == nil || o.CarrierNo == nil {
		return nil, false
	}
	return o.CarrierNo, true
}

// HasCarrierNo returns a boolean if a field has been set.
func (o *TrackingEventSailingInfo) HasCarrierNo() bool {
	if o != nil && o.CarrierNo != nil {
		return true
	}

	return false
}

// SetCarrierNo gets a reference to the given string and assigns it to the CarrierNo field.
func (o *TrackingEventSailingInfo) SetCarrierNo(v string) {
	o.CarrierNo = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *TrackingEventSailingInfo) GetCreated() time.Time {
	if o == nil || o.Created == nil {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingEventSailingInfo) GetCreatedOk() (*time.Time, bool) {
	if o == nil || o.Created == nil {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *TrackingEventSailingInfo) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *TrackingEventSailingInfo) SetCreated(v time.Time) {
	o.Created = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TrackingEventSailingInfo) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingEventSailingInfo) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TrackingEventSailingInfo) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *TrackingEventSailingInfo) SetId(v string) {
	o.Id = &v
}

// GetImo returns the Imo field value if set, zero value otherwise.
func (o *TrackingEventSailingInfo) GetImo() string {
	if o == nil || o.Imo == nil {
		var ret string
		return ret
	}
	return *o.Imo
}

// GetImoOk returns a tuple with the Imo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingEventSailingInfo) GetImoOk() (*string, bool) {
	if o == nil || o.Imo == nil {
		return nil, false
	}
	return o.Imo, true
}

// HasImo returns a boolean if a field has been set.
func (o *TrackingEventSailingInfo) HasImo() bool {
	if o != nil && o.Imo != nil {
		return true
	}

	return false
}

// SetImo gets a reference to the given string and assigns it to the Imo field.
func (o *TrackingEventSailingInfo) SetImo(v string) {
	o.Imo = &v
}

// GetIsActive returns the IsActive field value if set, zero value otherwise.
func (o *TrackingEventSailingInfo) GetIsActive() bool {
	if o == nil || o.IsActive == nil {
		var ret bool
		return ret
	}
	return *o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingEventSailingInfo) GetIsActiveOk() (*bool, bool) {
	if o == nil || o.IsActive == nil {
		return nil, false
	}
	return o.IsActive, true
}

// HasIsActive returns a boolean if a field has been set.
func (o *TrackingEventSailingInfo) HasIsActive() bool {
	if o != nil && o.IsActive != nil {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given bool and assigns it to the IsActive field.
func (o *TrackingEventSailingInfo) SetIsActive(v bool) {
	o.IsActive = &v
}

// GetPod returns the Pod field value if set, zero value otherwise.
func (o *TrackingEventSailingInfo) GetPod() string {
	if o == nil || o.Pod == nil {
		var ret string
		return ret
	}
	return *o.Pod
}

// GetPodOk returns a tuple with the Pod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingEventSailingInfo) GetPodOk() (*string, bool) {
	if o == nil || o.Pod == nil {
		return nil, false
	}
	return o.Pod, true
}

// HasPod returns a boolean if a field has been set.
func (o *TrackingEventSailingInfo) HasPod() bool {
	if o != nil && o.Pod != nil {
		return true
	}

	return false
}

// SetPod gets a reference to the given string and assigns it to the Pod field.
func (o *TrackingEventSailingInfo) SetPod(v string) {
	o.Pod = &v
}

// GetPodActualArrivalLt returns the PodActualArrivalLt field value if set, zero value otherwise.
func (o *TrackingEventSailingInfo) GetPodActualArrivalLt() string {
	if o == nil || o.PodActualArrivalLt == nil {
		var ret string
		return ret
	}
	return *o.PodActualArrivalLt
}

// GetPodActualArrivalLtOk returns a tuple with the PodActualArrivalLt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingEventSailingInfo) GetPodActualArrivalLtOk() (*string, bool) {
	if o == nil || o.PodActualArrivalLt == nil {
		return nil, false
	}
	return o.PodActualArrivalLt, true
}

// HasPodActualArrivalLt returns a boolean if a field has been set.
func (o *TrackingEventSailingInfo) HasPodActualArrivalLt() bool {
	if o != nil && o.PodActualArrivalLt != nil {
		return true
	}

	return false
}

// SetPodActualArrivalLt gets a reference to the given string and assigns it to the PodActualArrivalLt field.
func (o *TrackingEventSailingInfo) SetPodActualArrivalLt(v string) {
	o.PodActualArrivalLt = &v
}

// GetPodActualArrivalLtFromAis returns the PodActualArrivalLtFromAis field value if set, zero value otherwise.
func (o *TrackingEventSailingInfo) GetPodActualArrivalLtFromAis() string {
	if o == nil || o.PodActualArrivalLtFromAis == nil {
		var ret string
		return ret
	}
	return *o.PodActualArrivalLtFromAis
}

// GetPodActualArrivalLtFromAisOk returns a tuple with the PodActualArrivalLtFromAis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingEventSailingInfo) GetPodActualArrivalLtFromAisOk() (*string, bool) {
	if o == nil || o.PodActualArrivalLtFromAis == nil {
		return nil, false
	}
	return o.PodActualArrivalLtFromAis, true
}

// HasPodActualArrivalLtFromAis returns a boolean if a field has been set.
func (o *TrackingEventSailingInfo) HasPodActualArrivalLtFromAis() bool {
	if o != nil && o.PodActualArrivalLtFromAis != nil {
		return true
	}

	return false
}

// SetPodActualArrivalLtFromAis gets a reference to the given string and assigns it to the PodActualArrivalLtFromAis field.
func (o *TrackingEventSailingInfo) SetPodActualArrivalLtFromAis(v string) {
	o.PodActualArrivalLtFromAis = &v
}

// GetPodActualDepartureLt returns the PodActualDepartureLt field value if set, zero value otherwise.
func (o *TrackingEventSailingInfo) GetPodActualDepartureLt() string {
	if o == nil || o.PodActualDepartureLt == nil {
		var ret string
		return ret
	}
	return *o.PodActualDepartureLt
}

// GetPodActualDepartureLtOk returns a tuple with the PodActualDepartureLt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingEventSailingInfo) GetPodActualDepartureLtOk() (*string, bool) {
	if o == nil || o.PodActualDepartureLt == nil {
		return nil, false
	}
	return o.PodActualDepartureLt, true
}

// HasPodActualDepartureLt returns a boolean if a field has been set.
func (o *TrackingEventSailingInfo) HasPodActualDepartureLt() bool {
	if o != nil && o.PodActualDepartureLt != nil {
		return true
	}

	return false
}

// SetPodActualDepartureLt gets a reference to the given string and assigns it to the PodActualDepartureLt field.
func (o *TrackingEventSailingInfo) SetPodActualDepartureLt(v string) {
	o.PodActualDepartureLt = &v
}

// GetPodActualDepartureLtFromAis returns the PodActualDepartureLtFromAis field value if set, zero value otherwise.
func (o *TrackingEventSailingInfo) GetPodActualDepartureLtFromAis() string {
	if o == nil || o.PodActualDepartureLtFromAis == nil {
		var ret string
		return ret
	}
	return *o.PodActualDepartureLtFromAis
}

// GetPodActualDepartureLtFromAisOk returns a tuple with the PodActualDepartureLtFromAis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingEventSailingInfo) GetPodActualDepartureLtFromAisOk() (*string, bool) {
	if o == nil || o.PodActualDepartureLtFromAis == nil {
		return nil, false
	}
	return o.PodActualDepartureLtFromAis, true
}

// HasPodActualDepartureLtFromAis returns a boolean if a field has been set.
func (o *TrackingEventSailingInfo) HasPodActualDepartureLtFromAis() bool {
	if o != nil && o.PodActualDepartureLtFromAis != nil {
		return true
	}

	return false
}

// SetPodActualDepartureLtFromAis gets a reference to the given string and assigns it to the PodActualDepartureLtFromAis field.
func (o *TrackingEventSailingInfo) SetPodActualDepartureLtFromAis(v string) {
	o.PodActualDepartureLtFromAis = &v
}

// GetPodActualDischargeLt returns the PodActualDischargeLt field value if set, zero value otherwise.
func (o *TrackingEventSailingInfo) GetPodActualDischargeLt() string {
	if o == nil || o.PodActualDischargeLt == nil {
		var ret string
		return ret
	}
	return *o.PodActualDischargeLt
}

// GetPodActualDischargeLtOk returns a tuple with the PodActualDischargeLt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingEventSailingInfo) GetPodActualDischargeLtOk() (*string, bool) {
	if o == nil || o.PodActualDischargeLt == nil {
		return nil, false
	}
	return o.PodActualDischargeLt, true
}

// HasPodActualDischargeLt returns a boolean if a field has been set.
func (o *TrackingEventSailingInfo) HasPodActualDischargeLt() bool {
	if o != nil && o.PodActualDischargeLt != nil {
		return true
	}

	return false
}

// SetPodActualDischargeLt gets a reference to the given string and assigns it to the PodActualDischargeLt field.
func (o *TrackingEventSailingInfo) SetPodActualDischargeLt(v string) {
	o.PodActualDischargeLt = &v
}

// GetPodName returns the PodName field value if set, zero value otherwise.
func (o *TrackingEventSailingInfo) GetPodName() string {
	if o == nil || o.PodName == nil {
		var ret string
		return ret
	}
	return *o.PodName
}

// GetPodNameOk returns a tuple with the PodName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingEventSailingInfo) GetPodNameOk() (*string, bool) {
	if o == nil || o.PodName == nil {
		return nil, false
	}
	return o.PodName, true
}

// HasPodName returns a boolean if a field has been set.
func (o *TrackingEventSailingInfo) HasPodName() bool {
	if o != nil && o.PodName != nil {
		return true
	}

	return false
}

// SetPodName gets a reference to the given string and assigns it to the PodName field.
func (o *TrackingEventSailingInfo) SetPodName(v string) {
	o.PodName = &v
}

// GetPodPredictedArrivalLt returns the PodPredictedArrivalLt field value if set, zero value otherwise.
func (o *TrackingEventSailingInfo) GetPodPredictedArrivalLt() string {
	if o == nil || o.PodPredictedArrivalLt == nil {
		var ret string
		return ret
	}
	return *o.PodPredictedArrivalLt
}

// GetPodPredictedArrivalLtOk returns a tuple with the PodPredictedArrivalLt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingEventSailingInfo) GetPodPredictedArrivalLtOk() (*string, bool) {
	if o == nil || o.PodPredictedArrivalLt == nil {
		return nil, false
	}
	return o.PodPredictedArrivalLt, true
}

// HasPodPredictedArrivalLt returns a boolean if a field has been set.
func (o *TrackingEventSailingInfo) HasPodPredictedArrivalLt() bool {
	if o != nil && o.PodPredictedArrivalLt != nil {
		return true
	}

	return false
}

// SetPodPredictedArrivalLt gets a reference to the given string and assigns it to the PodPredictedArrivalLt field.
func (o *TrackingEventSailingInfo) SetPodPredictedArrivalLt(v string) {
	o.PodPredictedArrivalLt = &v
}

// GetPodPredictedDepartureLt returns the PodPredictedDepartureLt field value if set, zero value otherwise.
func (o *TrackingEventSailingInfo) GetPodPredictedDepartureLt() string {
	if o == nil || o.PodPredictedDepartureLt == nil {
		var ret string
		return ret
	}
	return *o.PodPredictedDepartureLt
}

// GetPodPredictedDepartureLtOk returns a tuple with the PodPredictedDepartureLt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingEventSailingInfo) GetPodPredictedDepartureLtOk() (*string, bool) {
	if o == nil || o.PodPredictedDepartureLt == nil {
		return nil, false
	}
	return o.PodPredictedDepartureLt, true
}

// HasPodPredictedDepartureLt returns a boolean if a field has been set.
func (o *TrackingEventSailingInfo) HasPodPredictedDepartureLt() bool {
	if o != nil && o.PodPredictedDepartureLt != nil {
		return true
	}

	return false
}

// SetPodPredictedDepartureLt gets a reference to the given string and assigns it to the PodPredictedDepartureLt field.
func (o *TrackingEventSailingInfo) SetPodPredictedDepartureLt(v string) {
	o.PodPredictedDepartureLt = &v
}

// GetPodScheduledArrivalLt returns the PodScheduledArrivalLt field value if set, zero value otherwise.
func (o *TrackingEventSailingInfo) GetPodScheduledArrivalLt() string {
	if o == nil || o.PodScheduledArrivalLt == nil {
		var ret string
		return ret
	}
	return *o.PodScheduledArrivalLt
}

// GetPodScheduledArrivalLtOk returns a tuple with the PodScheduledArrivalLt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingEventSailingInfo) GetPodScheduledArrivalLtOk() (*string, bool) {
	if o == nil || o.PodScheduledArrivalLt == nil {
		return nil, false
	}
	return o.PodScheduledArrivalLt, true
}

// HasPodScheduledArrivalLt returns a boolean if a field has been set.
func (o *TrackingEventSailingInfo) HasPodScheduledArrivalLt() bool {
	if o != nil && o.PodScheduledArrivalLt != nil {
		return true
	}

	return false
}

// SetPodScheduledArrivalLt gets a reference to the given string and assigns it to the PodScheduledArrivalLt field.
func (o *TrackingEventSailingInfo) SetPodScheduledArrivalLt(v string) {
	o.PodScheduledArrivalLt = &v
}

// GetPodScheduledArrivalLtFromSchedule returns the PodScheduledArrivalLtFromSchedule field value if set, zero value otherwise.
func (o *TrackingEventSailingInfo) GetPodScheduledArrivalLtFromSchedule() string {
	if o == nil || o.PodScheduledArrivalLtFromSchedule == nil {
		var ret string
		return ret
	}
	return *o.PodScheduledArrivalLtFromSchedule
}

// GetPodScheduledArrivalLtFromScheduleOk returns a tuple with the PodScheduledArrivalLtFromSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingEventSailingInfo) GetPodScheduledArrivalLtFromScheduleOk() (*string, bool) {
	if o == nil || o.PodScheduledArrivalLtFromSchedule == nil {
		return nil, false
	}
	return o.PodScheduledArrivalLtFromSchedule, true
}

// HasPodScheduledArrivalLtFromSchedule returns a boolean if a field has been set.
func (o *TrackingEventSailingInfo) HasPodScheduledArrivalLtFromSchedule() bool {
	if o != nil && o.PodScheduledArrivalLtFromSchedule != nil {
		return true
	}

	return false
}

// SetPodScheduledArrivalLtFromSchedule gets a reference to the given string and assigns it to the PodScheduledArrivalLtFromSchedule field.
func (o *TrackingEventSailingInfo) SetPodScheduledArrivalLtFromSchedule(v string) {
	o.PodScheduledArrivalLtFromSchedule = &v
}

// GetPodScheduledDischargeLt returns the PodScheduledDischargeLt field value if set, zero value otherwise.
func (o *TrackingEventSailingInfo) GetPodScheduledDischargeLt() string {
	if o == nil || o.PodScheduledDischargeLt == nil {
		var ret string
		return ret
	}
	return *o.PodScheduledDischargeLt
}

// GetPodScheduledDischargeLtOk returns a tuple with the PodScheduledDischargeLt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingEventSailingInfo) GetPodScheduledDischargeLtOk() (*string, bool) {
	if o == nil || o.PodScheduledDischargeLt == nil {
		return nil, false
	}
	return o.PodScheduledDischargeLt, true
}

// HasPodScheduledDischargeLt returns a boolean if a field has been set.
func (o *TrackingEventSailingInfo) HasPodScheduledDischargeLt() bool {
	if o != nil && o.PodScheduledDischargeLt != nil {
		return true
	}

	return false
}

// SetPodScheduledDischargeLt gets a reference to the given string and assigns it to the PodScheduledDischargeLt field.
func (o *TrackingEventSailingInfo) SetPodScheduledDischargeLt(v string) {
	o.PodScheduledDischargeLt = &v
}

// GetPodScheduledDepartureLtFromSchedule returns the PodScheduledDepartureLtFromSchedule field value if set, zero value otherwise.
func (o *TrackingEventSailingInfo) GetPodScheduledDepartureLtFromSchedule() string {
	if o == nil || o.PodScheduledDepartureLtFromSchedule == nil {
		var ret string
		return ret
	}
	return *o.PodScheduledDepartureLtFromSchedule
}

// GetPodScheduledDepartureLtFromScheduleOk returns a tuple with the PodScheduledDepartureLtFromSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingEventSailingInfo) GetPodScheduledDepartureLtFromScheduleOk() (*string, bool) {
	if o == nil || o.PodScheduledDepartureLtFromSchedule == nil {
		return nil, false
	}
	return o.PodScheduledDepartureLtFromSchedule, true
}

// HasPodScheduledDepartureLtFromSchedule returns a boolean if a field has been set.
func (o *TrackingEventSailingInfo) HasPodScheduledDepartureLtFromSchedule() bool {
	if o != nil && o.PodScheduledDepartureLtFromSchedule != nil {
		return true
	}

	return false
}

// SetPodScheduledDepartureLtFromSchedule gets a reference to the given string and assigns it to the PodScheduledDepartureLtFromSchedule field.
func (o *TrackingEventSailingInfo) SetPodScheduledDepartureLtFromSchedule(v string) {
	o.PodScheduledDepartureLtFromSchedule = &v
}

// GetPol returns the Pol field value if set, zero value otherwise.
func (o *TrackingEventSailingInfo) GetPol() string {
	if o == nil || o.Pol == nil {
		var ret string
		return ret
	}
	return *o.Pol
}

// GetPolOk returns a tuple with the Pol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingEventSailingInfo) GetPolOk() (*string, bool) {
	if o == nil || o.Pol == nil {
		return nil, false
	}
	return o.Pol, true
}

// HasPol returns a boolean if a field has been set.
func (o *TrackingEventSailingInfo) HasPol() bool {
	if o != nil && o.Pol != nil {
		return true
	}

	return false
}

// SetPol gets a reference to the given string and assigns it to the Pol field.
func (o *TrackingEventSailingInfo) SetPol(v string) {
	o.Pol = &v
}

// GetPolActualArrivalLtFromAis returns the PolActualArrivalLtFromAis field value if set, zero value otherwise.
func (o *TrackingEventSailingInfo) GetPolActualArrivalLtFromAis() string {
	if o == nil || o.PolActualArrivalLtFromAis == nil {
		var ret string
		return ret
	}
	return *o.PolActualArrivalLtFromAis
}

// GetPolActualArrivalLtFromAisOk returns a tuple with the PolActualArrivalLtFromAis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingEventSailingInfo) GetPolActualArrivalLtFromAisOk() (*string, bool) {
	if o == nil || o.PolActualArrivalLtFromAis == nil {
		return nil, false
	}
	return o.PolActualArrivalLtFromAis, true
}

// HasPolActualArrivalLtFromAis returns a boolean if a field has been set.
func (o *TrackingEventSailingInfo) HasPolActualArrivalLtFromAis() bool {
	if o != nil && o.PolActualArrivalLtFromAis != nil {
		return true
	}

	return false
}

// SetPolActualArrivalLtFromAis gets a reference to the given string and assigns it to the PolActualArrivalLtFromAis field.
func (o *TrackingEventSailingInfo) SetPolActualArrivalLtFromAis(v string) {
	o.PolActualArrivalLtFromAis = &v
}

// GetPolActualDepartureLtFromAis returns the PolActualDepartureLtFromAis field value if set, zero value otherwise.
func (o *TrackingEventSailingInfo) GetPolActualDepartureLtFromAis() string {
	if o == nil || o.PolActualDepartureLtFromAis == nil {
		var ret string
		return ret
	}
	return *o.PolActualDepartureLtFromAis
}

// GetPolActualDepartureLtFromAisOk returns a tuple with the PolActualDepartureLtFromAis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingEventSailingInfo) GetPolActualDepartureLtFromAisOk() (*string, bool) {
	if o == nil || o.PolActualDepartureLtFromAis == nil {
		return nil, false
	}
	return o.PolActualDepartureLtFromAis, true
}

// HasPolActualDepartureLtFromAis returns a boolean if a field has been set.
func (o *TrackingEventSailingInfo) HasPolActualDepartureLtFromAis() bool {
	if o != nil && o.PolActualDepartureLtFromAis != nil {
		return true
	}

	return false
}

// SetPolActualDepartureLtFromAis gets a reference to the given string and assigns it to the PolActualDepartureLtFromAis field.
func (o *TrackingEventSailingInfo) SetPolActualDepartureLtFromAis(v string) {
	o.PolActualDepartureLtFromAis = &v
}

// GetPolActualLoadingLt returns the PolActualLoadingLt field value if set, zero value otherwise.
func (o *TrackingEventSailingInfo) GetPolActualLoadingLt() string {
	if o == nil || o.PolActualLoadingLt == nil {
		var ret string
		return ret
	}
	return *o.PolActualLoadingLt
}

// GetPolActualLoadingLtOk returns a tuple with the PolActualLoadingLt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingEventSailingInfo) GetPolActualLoadingLtOk() (*string, bool) {
	if o == nil || o.PolActualLoadingLt == nil {
		return nil, false
	}
	return o.PolActualLoadingLt, true
}

// HasPolActualLoadingLt returns a boolean if a field has been set.
func (o *TrackingEventSailingInfo) HasPolActualLoadingLt() bool {
	if o != nil && o.PolActualLoadingLt != nil {
		return true
	}

	return false
}

// SetPolActualLoadingLt gets a reference to the given string and assigns it to the PolActualLoadingLt field.
func (o *TrackingEventSailingInfo) SetPolActualLoadingLt(v string) {
	o.PolActualLoadingLt = &v
}

// GetPolName returns the PolName field value if set, zero value otherwise.
func (o *TrackingEventSailingInfo) GetPolName() string {
	if o == nil || o.PolName == nil {
		var ret string
		return ret
	}
	return *o.PolName
}

// GetPolNameOk returns a tuple with the PolName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingEventSailingInfo) GetPolNameOk() (*string, bool) {
	if o == nil || o.PolName == nil {
		return nil, false
	}
	return o.PolName, true
}

// HasPolName returns a boolean if a field has been set.
func (o *TrackingEventSailingInfo) HasPolName() bool {
	if o != nil && o.PolName != nil {
		return true
	}

	return false
}

// SetPolName gets a reference to the given string and assigns it to the PolName field.
func (o *TrackingEventSailingInfo) SetPolName(v string) {
	o.PolName = &v
}

// GetPolPredictedArrivalLt returns the PolPredictedArrivalLt field value if set, zero value otherwise.
func (o *TrackingEventSailingInfo) GetPolPredictedArrivalLt() string {
	if o == nil || o.PolPredictedArrivalLt == nil {
		var ret string
		return ret
	}
	return *o.PolPredictedArrivalLt
}

// GetPolPredictedArrivalLtOk returns a tuple with the PolPredictedArrivalLt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingEventSailingInfo) GetPolPredictedArrivalLtOk() (*string, bool) {
	if o == nil || o.PolPredictedArrivalLt == nil {
		return nil, false
	}
	return o.PolPredictedArrivalLt, true
}

// HasPolPredictedArrivalLt returns a boolean if a field has been set.
func (o *TrackingEventSailingInfo) HasPolPredictedArrivalLt() bool {
	if o != nil && o.PolPredictedArrivalLt != nil {
		return true
	}

	return false
}

// SetPolPredictedArrivalLt gets a reference to the given string and assigns it to the PolPredictedArrivalLt field.
func (o *TrackingEventSailingInfo) SetPolPredictedArrivalLt(v string) {
	o.PolPredictedArrivalLt = &v
}

// GetPolPredictedDepartureLt returns the PolPredictedDepartureLt field value if set, zero value otherwise.
func (o *TrackingEventSailingInfo) GetPolPredictedDepartureLt() string {
	if o == nil || o.PolPredictedDepartureLt == nil {
		var ret string
		return ret
	}
	return *o.PolPredictedDepartureLt
}

// GetPolPredictedDepartureLtOk returns a tuple with the PolPredictedDepartureLt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingEventSailingInfo) GetPolPredictedDepartureLtOk() (*string, bool) {
	if o == nil || o.PolPredictedDepartureLt == nil {
		return nil, false
	}
	return o.PolPredictedDepartureLt, true
}

// HasPolPredictedDepartureLt returns a boolean if a field has been set.
func (o *TrackingEventSailingInfo) HasPolPredictedDepartureLt() bool {
	if o != nil && o.PolPredictedDepartureLt != nil {
		return true
	}

	return false
}

// SetPolPredictedDepartureLt gets a reference to the given string and assigns it to the PolPredictedDepartureLt field.
func (o *TrackingEventSailingInfo) SetPolPredictedDepartureLt(v string) {
	o.PolPredictedDepartureLt = &v
}

// GetPolScheduledArrivalLtFromSchedule returns the PolScheduledArrivalLtFromSchedule field value if set, zero value otherwise.
func (o *TrackingEventSailingInfo) GetPolScheduledArrivalLtFromSchedule() string {
	if o == nil || o.PolScheduledArrivalLtFromSchedule == nil {
		var ret string
		return ret
	}
	return *o.PolScheduledArrivalLtFromSchedule
}

// GetPolScheduledArrivalLtFromScheduleOk returns a tuple with the PolScheduledArrivalLtFromSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingEventSailingInfo) GetPolScheduledArrivalLtFromScheduleOk() (*string, bool) {
	if o == nil || o.PolScheduledArrivalLtFromSchedule == nil {
		return nil, false
	}
	return o.PolScheduledArrivalLtFromSchedule, true
}

// HasPolScheduledArrivalLtFromSchedule returns a boolean if a field has been set.
func (o *TrackingEventSailingInfo) HasPolScheduledArrivalLtFromSchedule() bool {
	if o != nil && o.PolScheduledArrivalLtFromSchedule != nil {
		return true
	}

	return false
}

// SetPolScheduledArrivalLtFromSchedule gets a reference to the given string and assigns it to the PolScheduledArrivalLtFromSchedule field.
func (o *TrackingEventSailingInfo) SetPolScheduledArrivalLtFromSchedule(v string) {
	o.PolScheduledArrivalLtFromSchedule = &v
}

// GetPolScheduledDepartureLt returns the PolScheduledDepartureLt field value if set, zero value otherwise.
func (o *TrackingEventSailingInfo) GetPolScheduledDepartureLt() string {
	if o == nil || o.PolScheduledDepartureLt == nil {
		var ret string
		return ret
	}
	return *o.PolScheduledDepartureLt
}

// GetPolScheduledDepartureLtOk returns a tuple with the PolScheduledDepartureLt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingEventSailingInfo) GetPolScheduledDepartureLtOk() (*string, bool) {
	if o == nil || o.PolScheduledDepartureLt == nil {
		return nil, false
	}
	return o.PolScheduledDepartureLt, true
}

// HasPolScheduledDepartureLt returns a boolean if a field has been set.
func (o *TrackingEventSailingInfo) HasPolScheduledDepartureLt() bool {
	if o != nil && o.PolScheduledDepartureLt != nil {
		return true
	}

	return false
}

// SetPolScheduledDepartureLt gets a reference to the given string and assigns it to the PolScheduledDepartureLt field.
func (o *TrackingEventSailingInfo) SetPolScheduledDepartureLt(v string) {
	o.PolScheduledDepartureLt = &v
}

// GetPolScheduledLoadingLt returns the PolScheduledLoadingLt field value if set, zero value otherwise.
func (o *TrackingEventSailingInfo) GetPolScheduledLoadingLt() string {
	if o == nil || o.PolScheduledLoadingLt == nil {
		var ret string
		return ret
	}
	return *o.PolScheduledLoadingLt
}

// GetPolScheduledLoadingLtOk returns a tuple with the PolScheduledLoadingLt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingEventSailingInfo) GetPolScheduledLoadingLtOk() (*string, bool) {
	if o == nil || o.PolScheduledLoadingLt == nil {
		return nil, false
	}
	return o.PolScheduledLoadingLt, true
}

// HasPolScheduledLoadingLt returns a boolean if a field has been set.
func (o *TrackingEventSailingInfo) HasPolScheduledLoadingLt() bool {
	if o != nil && o.PolScheduledLoadingLt != nil {
		return true
	}

	return false
}

// SetPolScheduledLoadingLt gets a reference to the given string and assigns it to the PolScheduledLoadingLt field.
func (o *TrackingEventSailingInfo) SetPolScheduledLoadingLt(v string) {
	o.PolScheduledLoadingLt = &v
}

// GetStatusCode returns the StatusCode field value if set, zero value otherwise.
func (o *TrackingEventSailingInfo) GetStatusCode() string {
	if o == nil || o.StatusCode == nil {
		var ret string
		return ret
	}
	return *o.StatusCode
}

// GetStatusCodeOk returns a tuple with the StatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingEventSailingInfo) GetStatusCodeOk() (*string, bool) {
	if o == nil || o.StatusCode == nil {
		return nil, false
	}
	return o.StatusCode, true
}

// HasStatusCode returns a boolean if a field has been set.
func (o *TrackingEventSailingInfo) HasStatusCode() bool {
	if o != nil && o.StatusCode != nil {
		return true
	}

	return false
}

// SetStatusCode gets a reference to the given string and assigns it to the StatusCode field.
func (o *TrackingEventSailingInfo) SetStatusCode(v string) {
	o.StatusCode = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *TrackingEventSailingInfo) GetUpdated() time.Time {
	if o == nil || o.Updated == nil {
		var ret time.Time
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingEventSailingInfo) GetUpdatedOk() (*time.Time, bool) {
	if o == nil || o.Updated == nil {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *TrackingEventSailingInfo) HasUpdated() bool {
	if o != nil && o.Updated != nil {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given time.Time and assigns it to the Updated field.
func (o *TrackingEventSailingInfo) SetUpdated(v time.Time) {
	o.Updated = &v
}

// GetVesselLeg returns the VesselLeg field value if set, zero value otherwise.
func (o *TrackingEventSailingInfo) GetVesselLeg() int32 {
	if o == nil || o.VesselLeg == nil {
		var ret int32
		return ret
	}
	return *o.VesselLeg
}

// GetVesselLegOk returns a tuple with the VesselLeg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingEventSailingInfo) GetVesselLegOk() (*int32, bool) {
	if o == nil || o.VesselLeg == nil {
		return nil, false
	}
	return o.VesselLeg, true
}

// HasVesselLeg returns a boolean if a field has been set.
func (o *TrackingEventSailingInfo) HasVesselLeg() bool {
	if o != nil && o.VesselLeg != nil {
		return true
	}

	return false
}

// SetVesselLeg gets a reference to the given int32 and assigns it to the VesselLeg field.
func (o *TrackingEventSailingInfo) SetVesselLeg(v int32) {
	o.VesselLeg = &v
}

// GetVesselName returns the VesselName field value if set, zero value otherwise.
func (o *TrackingEventSailingInfo) GetVesselName() string {
	if o == nil || o.VesselName == nil {
		var ret string
		return ret
	}
	return *o.VesselName
}

// GetVesselNameOk returns a tuple with the VesselName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingEventSailingInfo) GetVesselNameOk() (*string, bool) {
	if o == nil || o.VesselName == nil {
		return nil, false
	}
	return o.VesselName, true
}

// HasVesselName returns a boolean if a field has been set.
func (o *TrackingEventSailingInfo) HasVesselName() bool {
	if o != nil && o.VesselName != nil {
		return true
	}

	return false
}

// SetVesselName gets a reference to the given string and assigns it to the VesselName field.
func (o *TrackingEventSailingInfo) SetVesselName(v string) {
	o.VesselName = &v
}

// GetVoyageNo returns the VoyageNo field value if set, zero value otherwise.
func (o *TrackingEventSailingInfo) GetVoyageNo() string {
	if o == nil || o.VoyageNo == nil {
		var ret string
		return ret
	}
	return *o.VoyageNo
}

// GetVoyageNoOk returns a tuple with the VoyageNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackingEventSailingInfo) GetVoyageNoOk() (*string, bool) {
	if o == nil || o.VoyageNo == nil {
		return nil, false
	}
	return o.VoyageNo, true
}

// HasVoyageNo returns a boolean if a field has been set.
func (o *TrackingEventSailingInfo) HasVoyageNo() bool {
	if o != nil && o.VoyageNo != nil {
		return true
	}

	return false
}

// SetVoyageNo gets a reference to the given string and assigns it to the VoyageNo field.
func (o *TrackingEventSailingInfo) SetVoyageNo(v string) {
	o.VoyageNo = &v
}

func (o TrackingEventSailingInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CarrierNo != nil {
		toSerialize["carrier_no"] = o.CarrierNo
	}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Imo != nil {
		toSerialize["imo"] = o.Imo
	}
	if o.IsActive != nil {
		toSerialize["is_active"] = o.IsActive
	}
	if o.Pod != nil {
		toSerialize["pod"] = o.Pod
	}
	if o.PodActualArrivalLt != nil {
		toSerialize["pod_actual_arrival_lt"] = o.PodActualArrivalLt
	}
	if o.PodActualArrivalLtFromAis != nil {
		toSerialize["pod_actual_arrival_lt_from_ais"] = o.PodActualArrivalLtFromAis
	}
	if o.PodActualDepartureLt != nil {
		toSerialize["pod_actual_departure_lt"] = o.PodActualDepartureLt
	}
	if o.PodActualDepartureLtFromAis != nil {
		toSerialize["pod_actual_departure_lt_from_ais"] = o.PodActualDepartureLtFromAis
	}
	if o.PodActualDischargeLt != nil {
		toSerialize["pod_actual_discharge_lt"] = o.PodActualDischargeLt
	}
	if o.PodName != nil {
		toSerialize["pod_name"] = o.PodName
	}
	if o.PodPredictedArrivalLt != nil {
		toSerialize["pod_predicted_arrival_lt"] = o.PodPredictedArrivalLt
	}
	if o.PodPredictedDepartureLt != nil {
		toSerialize["pod_predicted_departure_lt"] = o.PodPredictedDepartureLt
	}
	if o.PodScheduledArrivalLt != nil {
		toSerialize["pod_scheduled_arrival_lt"] = o.PodScheduledArrivalLt
	}
	if o.PodScheduledArrivalLtFromSchedule != nil {
		toSerialize["pod_scheduled_arrival_lt_from_schedule"] = o.PodScheduledArrivalLtFromSchedule
	}
	if o.PodScheduledDischargeLt != nil {
		toSerialize["pod_scheduled_discharge_lt"] = o.PodScheduledDischargeLt
	}
	if o.PodScheduledDepartureLtFromSchedule != nil {
		toSerialize["pod_scheduled_departure_lt_from_schedule"] = o.PodScheduledDepartureLtFromSchedule
	}
	if o.Pol != nil {
		toSerialize["pol"] = o.Pol
	}
	if o.PolActualArrivalLtFromAis != nil {
		toSerialize["pol_actual_arrival_lt_from_ais"] = o.PolActualArrivalLtFromAis
	}
	if o.PolActualDepartureLtFromAis != nil {
		toSerialize["pol_actual_departure_lt_from_ais"] = o.PolActualDepartureLtFromAis
	}
	if o.PolActualLoadingLt != nil {
		toSerialize["pol_actual_loading_lt"] = o.PolActualLoadingLt
	}
	if o.PolName != nil {
		toSerialize["pol_name"] = o.PolName
	}
	if o.PolPredictedArrivalLt != nil {
		toSerialize["pol_predicted_arrival_lt"] = o.PolPredictedArrivalLt
	}
	if o.PolPredictedDepartureLt != nil {
		toSerialize["pol_predicted_departure_lt"] = o.PolPredictedDepartureLt
	}
	if o.PolScheduledArrivalLtFromSchedule != nil {
		toSerialize["pol_scheduled_arrival_lt_from_schedule"] = o.PolScheduledArrivalLtFromSchedule
	}
	if o.PolScheduledDepartureLt != nil {
		toSerialize["pol_scheduled_departure_lt"] = o.PolScheduledDepartureLt
	}
	if o.PolScheduledLoadingLt != nil {
		toSerialize["pol_scheduled_loading_lt"] = o.PolScheduledLoadingLt
	}
	if o.StatusCode != nil {
		toSerialize["status_code"] = o.StatusCode
	}
	if o.Updated != nil {
		toSerialize["updated"] = o.Updated
	}
	if o.VesselLeg != nil {
		toSerialize["vessel_leg"] = o.VesselLeg
	}
	if o.VesselName != nil {
		toSerialize["vessel_name"] = o.VesselName
	}
	if o.VoyageNo != nil {
		toSerialize["voyage_no"] = o.VoyageNo
	}
	return json.Marshal(toSerialize)
}

type NullableTrackingEventSailingInfo struct {
	value *TrackingEventSailingInfo
	isSet bool
}

func (v NullableTrackingEventSailingInfo) Get() *TrackingEventSailingInfo {
	return v.value
}

func (v *NullableTrackingEventSailingInfo) Set(val *TrackingEventSailingInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableTrackingEventSailingInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableTrackingEventSailingInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrackingEventSailingInfo(val *TrackingEventSailingInfo) *NullableTrackingEventSailingInfo {
	return &NullableTrackingEventSailingInfo{value: val, isSet: true}
}

func (v NullableTrackingEventSailingInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrackingEventSailingInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


