/*
Container Tracking API

This documentation defines how the users can utilize the Portcast API to retrieve the latest Track and Trace Data for any container, bill of lading or booking across 100+ carriers and 2500+ ports across the globe.  What's changed in the version 2.0? Find out more about it [here](https://support.portcast.io/support/solutions/articles/151000074289-api-release-notes-april-2023-)!!

API version: 2.0
Contact: support@portcast.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package portcast

import (
	"encoding/json"
)

// checks if the ContainerMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContainerMetadata{}

// ContainerMetadata Schema for container metadata information
type ContainerMetadata struct {
	// Container Number
	CntrNo *string `json:"cntr_no,omitempty"`
	// Container Size and Type Code as defined by [ISO 6346](https://en.wikipedia.org/wiki/ISO_6346#Size_and_type_codes)
	DetailSt *string `json:"detail_st,omitempty"`
	// Container External Body Height
	ExternalHeightFt *float32 `json:"external_height_ft,omitempty"`
	// Container External Body Length
	ExternalLengthFt *float32 `json:"external_length_ft,omitempty"`
	// Container External Body Width
	ExternalWidthFt *float32 `json:"external_width_ft,omitempty"`
}

// NewContainerMetadata instantiates a new ContainerMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerMetadata() *ContainerMetadata {
	this := ContainerMetadata{}
	return &this
}

// NewContainerMetadataWithDefaults instantiates a new ContainerMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerMetadataWithDefaults() *ContainerMetadata {
	this := ContainerMetadata{}
	return &this
}

// GetCntrNo returns the CntrNo field value if set, zero value otherwise.
func (o *ContainerMetadata) GetCntrNo() string {
	if o == nil || IsNil(o.CntrNo) {
		var ret string
		return ret
	}
	return *o.CntrNo
}

// GetCntrNoOk returns a tuple with the CntrNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerMetadata) GetCntrNoOk() (*string, bool) {
	if o == nil || IsNil(o.CntrNo) {
		return nil, false
	}
	return o.CntrNo, true
}

// HasCntrNo returns a boolean if a field has been set.
func (o *ContainerMetadata) HasCntrNo() bool {
	if o != nil && !IsNil(o.CntrNo) {
		return true
	}

	return false
}

// SetCntrNo gets a reference to the given string and assigns it to the CntrNo field.
func (o *ContainerMetadata) SetCntrNo(v string) {
	o.CntrNo = &v
}

// GetDetailSt returns the DetailSt field value if set, zero value otherwise.
func (o *ContainerMetadata) GetDetailSt() string {
	if o == nil || IsNil(o.DetailSt) {
		var ret string
		return ret
	}
	return *o.DetailSt
}

// GetDetailStOk returns a tuple with the DetailSt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerMetadata) GetDetailStOk() (*string, bool) {
	if o == nil || IsNil(o.DetailSt) {
		return nil, false
	}
	return o.DetailSt, true
}

// HasDetailSt returns a boolean if a field has been set.
func (o *ContainerMetadata) HasDetailSt() bool {
	if o != nil && !IsNil(o.DetailSt) {
		return true
	}

	return false
}

// SetDetailSt gets a reference to the given string and assigns it to the DetailSt field.
func (o *ContainerMetadata) SetDetailSt(v string) {
	o.DetailSt = &v
}

// GetExternalHeightFt returns the ExternalHeightFt field value if set, zero value otherwise.
func (o *ContainerMetadata) GetExternalHeightFt() float32 {
	if o == nil || IsNil(o.ExternalHeightFt) {
		var ret float32
		return ret
	}
	return *o.ExternalHeightFt
}

// GetExternalHeightFtOk returns a tuple with the ExternalHeightFt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerMetadata) GetExternalHeightFtOk() (*float32, bool) {
	if o == nil || IsNil(o.ExternalHeightFt) {
		return nil, false
	}
	return o.ExternalHeightFt, true
}

// HasExternalHeightFt returns a boolean if a field has been set.
func (o *ContainerMetadata) HasExternalHeightFt() bool {
	if o != nil && !IsNil(o.ExternalHeightFt) {
		return true
	}

	return false
}

// SetExternalHeightFt gets a reference to the given float32 and assigns it to the ExternalHeightFt field.
func (o *ContainerMetadata) SetExternalHeightFt(v float32) {
	o.ExternalHeightFt = &v
}

// GetExternalLengthFt returns the ExternalLengthFt field value if set, zero value otherwise.
func (o *ContainerMetadata) GetExternalLengthFt() float32 {
	if o == nil || IsNil(o.ExternalLengthFt) {
		var ret float32
		return ret
	}
	return *o.ExternalLengthFt
}

// GetExternalLengthFtOk returns a tuple with the ExternalLengthFt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerMetadata) GetExternalLengthFtOk() (*float32, bool) {
	if o == nil || IsNil(o.ExternalLengthFt) {
		return nil, false
	}
	return o.ExternalLengthFt, true
}

// HasExternalLengthFt returns a boolean if a field has been set.
func (o *ContainerMetadata) HasExternalLengthFt() bool {
	if o != nil && !IsNil(o.ExternalLengthFt) {
		return true
	}

	return false
}

// SetExternalLengthFt gets a reference to the given float32 and assigns it to the ExternalLengthFt field.
func (o *ContainerMetadata) SetExternalLengthFt(v float32) {
	o.ExternalLengthFt = &v
}

// GetExternalWidthFt returns the ExternalWidthFt field value if set, zero value otherwise.
func (o *ContainerMetadata) GetExternalWidthFt() float32 {
	if o == nil || IsNil(o.ExternalWidthFt) {
		var ret float32
		return ret
	}
	return *o.ExternalWidthFt
}

// GetExternalWidthFtOk returns a tuple with the ExternalWidthFt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerMetadata) GetExternalWidthFtOk() (*float32, bool) {
	if o == nil || IsNil(o.ExternalWidthFt) {
		return nil, false
	}
	return o.ExternalWidthFt, true
}

// HasExternalWidthFt returns a boolean if a field has been set.
func (o *ContainerMetadata) HasExternalWidthFt() bool {
	if o != nil && !IsNil(o.ExternalWidthFt) {
		return true
	}

	return false
}

// SetExternalWidthFt gets a reference to the given float32 and assigns it to the ExternalWidthFt field.
func (o *ContainerMetadata) SetExternalWidthFt(v float32) {
	o.ExternalWidthFt = &v
}

func (o ContainerMetadata) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContainerMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CntrNo) {
		toSerialize["cntr_no"] = o.CntrNo
	}
	if !IsNil(o.DetailSt) {
		toSerialize["detail_st"] = o.DetailSt
	}
	if !IsNil(o.ExternalHeightFt) {
		toSerialize["external_height_ft"] = o.ExternalHeightFt
	}
	if !IsNil(o.ExternalLengthFt) {
		toSerialize["external_length_ft"] = o.ExternalLengthFt
	}
	if !IsNil(o.ExternalWidthFt) {
		toSerialize["external_width_ft"] = o.ExternalWidthFt
	}
	return toSerialize, nil
}

type NullableContainerMetadata struct {
	value *ContainerMetadata
	isSet bool
}

func (v NullableContainerMetadata) Get() *ContainerMetadata {
	return v.value
}

func (v *NullableContainerMetadata) Set(val *ContainerMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerMetadata(val *ContainerMetadata) *NullableContainerMetadata {
	return &NullableContainerMetadata{value: val, isSet: true}
}

func (v NullableContainerMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
